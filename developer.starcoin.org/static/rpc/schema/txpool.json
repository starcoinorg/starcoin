{
  "openrpc": "1.2.6",
  "info": {
    "title": "txpool",
    "version": ""
  },
  "methods": [
    {
      "name": "txpool.submit_transaction",
      "params": [
        {
          "name": "tx",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "SignedUserTransaction",
            "description": "A transaction that has been signed.\n\nA `SignedUserTransaction` is a single transaction that can be atomically executed. Clients submit these to validator nodes, and the validator and executor submits these to the VM.\n\n**IMPORTANT:** The signature of a `SignedUserTransaction` is not guaranteed to be verified. For a transaction whose signature is statically guaranteed to be verified, see [`SignatureCheckedTransaction`].",
            "type": "object",
            "required": [
              "authenticator",
              "raw_txn"
            ],
            "properties": {
              "authenticator": {
                "description": "Public key and signature to authenticate",
                "anyOf": [
                  {
                    "description": "Single signature",
                    "type": "object",
                    "required": [
                      "Ed25519"
                    ],
                    "properties": {
                      "Ed25519": {
                        "type": "object",
                        "required": [
                          "public_key",
                          "signature"
                        ],
                        "properties": {
                          "public_key": {
                            "description": "An Ed25519 public key",
                            "type": "string"
                          },
                          "signature": {
                            "description": "An Ed25519 signature",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "description": "K-of-N multisignature",
                    "type": "object",
                    "required": [
                      "MultiEd25519"
                    ],
                    "properties": {
                      "MultiEd25519": {
                        "type": "object",
                        "required": [
                          "public_key",
                          "signature"
                        ],
                        "properties": {
                          "public_key": {
                            "description": "Vector of public keys in the multi-key Ed25519 structure along with the threshold.",
                            "type": "object",
                            "required": [
                              "public_keys",
                              "threshold"
                            ],
                            "properties": {
                              "public_keys": {
                                "type": "array",
                                "items": {
                                  "description": "An Ed25519 public key",
                                  "type": "string"
                                }
                              },
                              "threshold": {
                                "type": "integer",
                                "format": "uint8",
                                "minimum": 0.0
                              }
                            }
                          },
                          "signature": {
                            "description": "Vector of the multi-key signatures along with a 32bit [u8; 4] bitmap required to map signatures with their corresponding public keys.\n\nNote that bits are read from left to right. For instance, in the following bitmap [0b0001_0000, 0b0000_0000, 0b0000_0000, 0b0000_0001], the 3rd and 31st positions are set.",
                            "type": "object",
                            "required": [
                              "bitmap",
                              "signatures"
                            ],
                            "properties": {
                              "bitmap": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "uint8",
                                  "minimum": 0.0
                                },
                                "maxItems": 4,
                                "minItems": 4
                              },
                              "signatures": {
                                "type": "array",
                                "items": {
                                  "description": "An Ed25519 signature",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "raw_txn": {
                "description": "The raw transaction",
                "type": "object",
                "required": [
                  "chain_id",
                  "expiration_timestamp_secs",
                  "gas_token_code",
                  "gas_unit_price",
                  "max_gas_amount",
                  "payload",
                  "sender",
                  "sequence_number"
                ],
                "properties": {
                  "chain_id": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "uint8",
                        "minimum": 0.0
                      }
                    }
                  },
                  "expiration_timestamp_secs": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "gas_token_code": {
                    "type": "string"
                  },
                  "gas_unit_price": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "max_gas_amount": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "payload": {
                    "anyOf": [
                      {
                        "description": "A transaction that executes code.",
                        "type": "object",
                        "required": [
                          "Script"
                        ],
                        "properties": {
                          "Script": {
                            "description": "Call a Move script.",
                            "type": "object",
                            "required": [
                              "args",
                              "code",
                              "ty_args"
                            ],
                            "properties": {
                              "args": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "U8"
                                      ],
                                      "properties": {
                                        "U8": {
                                          "type": "integer",
                                          "format": "uint8",
                                          "minimum": 0.0
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "U64"
                                      ],
                                      "properties": {
                                        "U64": {
                                          "type": "integer",
                                          "format": "uint64",
                                          "minimum": 0.0
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "U128"
                                      ],
                                      "properties": {
                                        "U128": {
                                          "type": "integer",
                                          "format": "uint128",
                                          "minimum": 0.0
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "Address"
                                      ],
                                      "properties": {
                                        "Address": {
                                          "description": "A struct that represents an account address.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "U8Vector"
                                      ],
                                      "properties": {
                                        "U8Vector": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "Bool"
                                      ],
                                      "properties": {
                                        "Bool": {
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "code": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "uint8",
                                  "minimum": 0.0
                                }
                              },
                              "ty_args": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Bool",
                                    "U8",
                                    "U64",
                                    "U128",
                                    "Address",
                                    "Signer"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "description": "A transaction that publish or update module code by a package.",
                        "type": "object",
                        "required": [
                          "Package"
                        ],
                        "properties": {
                          "Package": {
                            "type": "object",
                            "required": [
                              "modules",
                              "package_address"
                            ],
                            "properties": {
                              "init_script": {
                                "description": "Call a Move script.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "args",
                                  "code",
                                  "ty_args"
                                ],
                                "properties": {
                                  "args": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "U8"
                                          ],
                                          "properties": {
                                            "U8": {
                                              "type": "integer",
                                              "format": "uint8",
                                              "minimum": 0.0
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "U64"
                                          ],
                                          "properties": {
                                            "U64": {
                                              "type": "integer",
                                              "format": "uint64",
                                              "minimum": 0.0
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "U128"
                                          ],
                                          "properties": {
                                            "U128": {
                                              "type": "integer",
                                              "format": "uint128",
                                              "minimum": 0.0
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "Address"
                                          ],
                                          "properties": {
                                            "Address": {
                                              "description": "A struct that represents an account address.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "U8Vector"
                                          ],
                                          "properties": {
                                            "U8Vector": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "Bool"
                                          ],
                                          "properties": {
                                            "Bool": {
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "code": {
                                    "type": "array",
                                    "items": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 0.0
                                    }
                                  },
                                  "ty_args": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "Bool",
                                        "U8",
                                        "U64",
                                        "U128",
                                        "Address",
                                        "Signer"
                                      ]
                                    }
                                  }
                                }
                              },
                              "modules": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "code"
                                  ],
                                  "properties": {
                                    "code": {
                                      "type": "array",
                                      "items": {
                                        "type": "integer",
                                        "format": "uint8",
                                        "minimum": 0.0
                                      }
                                    }
                                  }
                                }
                              },
                              "package_address": {
                                "description": "Package's all Module must at same address.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ]
                  },
                  "sender": {
                    "description": "Sender's address.",
                    "type": "string"
                  },
                  "sequence_number": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                }
              }
            }
          }
        }
      ],
      "result": {
        "name": "HashValue",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "HashValue",
          "description": "Output value of our hash function. Intentionally opaque for safety and modularity.",
          "type": "object",
          "required": [
            "hash"
          ],
          "properties": {
            "hash": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "name": "txpool.submit_hex_transaction",
      "params": [
        {
          "name": "tx",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "String",
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "HashValue",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "HashValue",
          "description": "Output value of our hash function. Intentionally opaque for safety and modularity.",
          "type": "object",
          "required": [
            "hash"
          ],
          "properties": {
            "hash": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "name": "txpool.gas_price",
      "params": [],
      "result": {
        "name": "StrView < u64 >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "StrView_for_uint64",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    {
      "name": "txpool.pending_txns_of_sender",
      "params": [
        {
          "name": "addr",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccountAddress",
            "description": "A struct that represents an account address.",
            "type": "string"
          }
        },
        {
          "name": "max_len",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_uint32",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Vec < SignedUserTransactionView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Array_of_SignedUserTransactionView",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "authenticator",
              "raw_txn",
              "transaction_hash"
            ],
            "properties": {
              "authenticator": {
                "description": "Public key and signature to authenticate",
                "anyOf": [
                  {
                    "description": "Single signature",
                    "type": "object",
                    "required": [
                      "Ed25519"
                    ],
                    "properties": {
                      "Ed25519": {
                        "type": "object",
                        "required": [
                          "public_key",
                          "signature"
                        ],
                        "properties": {
                          "public_key": {
                            "description": "An Ed25519 public key",
                            "type": "string"
                          },
                          "signature": {
                            "description": "An Ed25519 signature",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "description": "K-of-N multisignature",
                    "type": "object",
                    "required": [
                      "MultiEd25519"
                    ],
                    "properties": {
                      "MultiEd25519": {
                        "type": "object",
                        "required": [
                          "public_key",
                          "signature"
                        ],
                        "properties": {
                          "public_key": {
                            "description": "Vector of public keys in the multi-key Ed25519 structure along with the threshold.",
                            "type": "object",
                            "required": [
                              "public_keys",
                              "threshold"
                            ],
                            "properties": {
                              "public_keys": {
                                "type": "array",
                                "items": {
                                  "description": "An Ed25519 public key",
                                  "type": "string"
                                }
                              },
                              "threshold": {
                                "type": "integer",
                                "format": "uint8",
                                "minimum": 0.0
                              }
                            }
                          },
                          "signature": {
                            "description": "Vector of the multi-key signatures along with a 32bit [u8; 4] bitmap required to map signatures with their corresponding public keys.\n\nNote that bits are read from left to right. For instance, in the following bitmap [0b0001_0000, 0b0000_0000, 0b0000_0000, 0b0000_0001], the 3rd and 31st positions are set.",
                            "type": "object",
                            "required": [
                              "bitmap",
                              "signatures"
                            ],
                            "properties": {
                              "bitmap": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "uint8",
                                  "minimum": 0.0
                                },
                                "maxItems": 4,
                                "minItems": 4
                              },
                              "signatures": {
                                "type": "array",
                                "items": {
                                  "description": "An Ed25519 signature",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "raw_txn": {
                "description": "The raw transaction",
                "type": "object",
                "required": [
                  "chain_id",
                  "expiration_timestamp_secs",
                  "gas_token_code",
                  "gas_unit_price",
                  "max_gas_amount",
                  "payload",
                  "sender",
                  "sequence_number"
                ],
                "properties": {
                  "chain_id": {
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "expiration_timestamp_secs": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "gas_token_code": {
                    "type": "string"
                  },
                  "gas_unit_price": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "max_gas_amount": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "payload": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0.0
                    }
                  },
                  "sender": {
                    "description": "Sender's address.",
                    "type": "string"
                  },
                  "sequence_number": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                }
              },
              "transaction_hash": {
                "description": "Output value of our hash function. Intentionally opaque for safety and modularity.",
                "type": "object",
                "required": [
                  "hash"
                ],
                "properties": {
                  "hash": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "txpool.pending_txn",
      "params": [
        {
          "name": "txn_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "description": "Output value of our hash function. Intentionally opaque for safety and modularity.",
            "type": "object",
            "required": [
              "hash"
            ],
            "properties": {
              "hash": {
                "type": "string"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Option < SignedUserTransactionView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_SignedUserTransactionView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "authenticator",
            "raw_txn",
            "transaction_hash"
          ],
          "properties": {
            "authenticator": {
              "description": "Public key and signature to authenticate",
              "anyOf": [
                {
                  "description": "Single signature",
                  "type": "object",
                  "required": [
                    "Ed25519"
                  ],
                  "properties": {
                    "Ed25519": {
                      "type": "object",
                      "required": [
                        "public_key",
                        "signature"
                      ],
                      "properties": {
                        "public_key": {
                          "description": "An Ed25519 public key",
                          "type": "string"
                        },
                        "signature": {
                          "description": "An Ed25519 signature",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "K-of-N multisignature",
                  "type": "object",
                  "required": [
                    "MultiEd25519"
                  ],
                  "properties": {
                    "MultiEd25519": {
                      "type": "object",
                      "required": [
                        "public_key",
                        "signature"
                      ],
                      "properties": {
                        "public_key": {
                          "description": "Vector of public keys in the multi-key Ed25519 structure along with the threshold.",
                          "type": "object",
                          "required": [
                            "public_keys",
                            "threshold"
                          ],
                          "properties": {
                            "public_keys": {
                              "type": "array",
                              "items": {
                                "description": "An Ed25519 public key",
                                "type": "string"
                              }
                            },
                            "threshold": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 0.0
                            }
                          }
                        },
                        "signature": {
                          "description": "Vector of the multi-key signatures along with a 32bit [u8; 4] bitmap required to map signatures with their corresponding public keys.\n\nNote that bits are read from left to right. For instance, in the following bitmap [0b0001_0000, 0b0000_0000, 0b0000_0000, 0b0000_0001], the 3rd and 31st positions are set.",
                          "type": "object",
                          "required": [
                            "bitmap",
                            "signatures"
                          ],
                          "properties": {
                            "bitmap": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "format": "uint8",
                                "minimum": 0.0
                              },
                              "maxItems": 4,
                              "minItems": 4
                            },
                            "signatures": {
                              "type": "array",
                              "items": {
                                "description": "An Ed25519 signature",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "raw_txn": {
              "description": "The raw transaction",
              "type": "object",
              "required": [
                "chain_id",
                "expiration_timestamp_secs",
                "gas_token_code",
                "gas_unit_price",
                "max_gas_amount",
                "payload",
                "sender",
                "sequence_number"
              ],
              "properties": {
                "chain_id": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "expiration_timestamp_secs": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "gas_token_code": {
                  "type": "string"
                },
                "gas_unit_price": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "max_gas_amount": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "payload": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  }
                },
                "sender": {
                  "description": "Sender's address.",
                  "type": "string"
                },
                "sequence_number": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              }
            },
            "transaction_hash": {
              "description": "Output value of our hash function. Intentionally opaque for safety and modularity.",
              "type": "object",
              "required": [
                "hash"
              ],
              "properties": {
                "hash": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "txpool.next_sequence_number",
      "params": [
        {
          "name": "address",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccountAddress",
            "description": "A struct that represents an account address.",
            "type": "string"
          }
        }
      ],
      "result": {
        "name": "Option < u64 >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_uint64",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    {
      "name": "txpool.state",
      "params": [],
      "result": {
        "name": "TxPoolStatus",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "TxPoolStatus",
          "type": "object",
          "required": [
            "is_full",
            "mem",
            "mem_max",
            "senders",
            "txn_count",
            "txn_max_count"
          ],
          "properties": {
            "is_full": {
              "type": "boolean"
            },
            "mem": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            },
            "mem_max": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            },
            "senders": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            },
            "txn_count": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            },
            "txn_max_count": {
              "type": "integer",
              "format": "uint",
              "minimum": 0.0
            }
          }
        }
      }
    }
  ]
}
