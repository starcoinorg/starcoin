---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: starcoin-barnard
  labels:
    k8s-app: filebeat
    kubernetes.io/cluster-service: "true"
    app: filebeat-config
data:
  filebeat.yml: |-
    filebeat.autodiscover:
      providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints.enabled: true
          labels.dedot: true
          annotations.dedot: true
          templates:
            - condition:
                equals:
                  kubernetes.namespace: starcoin-barnard
              config:
                - type: container
                  containers.ids:
                    - "${data.kubernetes.container.id}"
                  paths:
                    - /sc-data/barnard/starcoin.log

    processors:
      - add_kubernetes_metadata:
          default_indexers.enabled: true
          default_matchers.enabled: true
          host: ${NODE_NAME}
      - drop_fields:
          fields: ["host", "log", "prospector", "input", "beat", "offset"]
          ignore_missing: true

    output.elasticsearch:
      hosts: ['https://${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:443}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
      pipeline: log_split
    setup.template.enabled: false
    setup.template.fields: "starcoin-fields.yml"
  starcoin-fields.yml: |-
    - key: kubernetes
      title: Kubernetes
      description: >
        Kubernetes metadata added by the kubernetes processor
      short_config: false
      anchor: kubernetes-processor
      fields:
        - name: kubernetes
          type: group
          fields:
            - name: pod.name
              type: keyword
              description: >
                Kubernetes pod name

            - name: pod.uid
              type: keyword
              description: >
                Kubernetes Pod UID

            - name: namespace
              type: keyword
              description: >
                Kubernetes namespace

            - name: node.name
              type: keyword
              description: >
                Kubernetes node name

            - name: node.hostname
              type: keyword
              description: >
                Kubernetes hostname as reported by the nodeâ€™s kernel

            - name: labels.*
              type: object
              object_type: keyword
              object_type_mapping_type: "*"
              description: >
                Kubernetes labels map

            - name: annotations.*
              type: object
              object_type: keyword
              object_type_mapping_type: "*"
              description: >
                Kubernetes annotations map

            - name: service.selectors.*
              type: object
              object_type: keyword
              object_type_mapping_type: "*"
              description: >
                Kubernetes Service selectors map

            - name: replicaset.name
              type: keyword
              description: >
                Kubernetes replicaset name

            - name: deployment.name
              type: keyword
              description: >
                Kubernetes deployment name

            - name: statefulset.name
              type: keyword
              description: >
                Kubernetes statefulset name

            - name: container.name
              type: keyword
              description: >
                Kubernetes container name

            - name: container.image
              type: keyword
              description: >
                Kubernetes container image

    - name: container
        title: Container
        group: 2
        description: 'Container fields are used for meta information about the specific
          container that is the source of information.

          These fields help correlate data based containers from any runtime.'
        type: group
        fields:
        - name: id
          level: core
          type: keyword
          ignore_above: 1024
          description: Unique container id.
        - name: image.name
          level: extended
          type: keyword
          ignore_above: 1024
          description: Name of the image the container was built on.
        - name: image.tag
          level: extended
          type: keyword
          ignore_above: 1024
          description: Container image tags.
        - name: labels
          level: extended
          type: object
          object_type: keyword
          description: Image labels.
        - name: name
          level: extended
          type: keyword
          ignore_above: 1024
          description: Container name.
        - name: runtime
          level: extended
          type: keyword
          ignore_above: 1024
          description: Runtime managing this container.
          example: docker

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: starcoin-barnard
  labels:
    k8s-app: filebeat
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.10.2
          args: [
              "-c", "/etc/filebeat.yml",
              "-e",
          ]
          env:
            - name: ELASTICSEARCH_HOST
              value: "search-starcoin-es2-47avtmhexhbg7qtynzebcnnu64.ap-northeast-1.es.amazonaws.com"
            - name: ELASTICSEARCH_PORT
              value: ""
            - name: ELASTICSEARCH_USERNAME
              value: elastic
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-pw-elastic
                  key: password
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
            - name: data
              mountPath: /usr/share/filebeat/data
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
      volumes:
        - name: config
          configMap:
            defaultMode: 0640
            name: filebeat-config
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
        - name: data
          hostPath:
            # When filebeat runs as non-root user, this directory needs to be writable by group (g+w).
            path: /var/lib/filebeat-data
            type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: starcoin-barnard
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: starcoin-barnard
  labels:
    k8s-app: filebeat
---
