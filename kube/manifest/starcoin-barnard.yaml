apiVersion: v1
kind: Service
metadata:
  name: starcoin-svc
  namespace: starcoin-barnard
spec:
  selector:
    app: starcoin
  ports:
    -
      protocol: TCP
      port: 9840
      targetPort: 9840
      name: peer
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: starcoin
  namespace: starcoin-barnard
  labels:
    app: starcoin
    network: barnard
spec:
  selector:
    matchLabels:
      app: starcoin
  serviceName: starcoin-svc
  replicas: 3
  template:
    metadata:
      name: starcoin
      labels:
        app: starcoin
        network: barnard
    spec:
      containers:
      - name: starcoin
        image: starcoin/starcoin:v1.0.0-beta.4
        imagePullPolicy: Always
        command:
          - bash
          - -c
        args:
          -
            rm -rf /sc-data/barnard/starcoin.ipc /sc-data/barnard/starcoindb/db/starcoindb/LOCK;
            id=$(echo -e $POD_NAME|awk -F'-' '{print $2}') && IFS='; ' read -r -a node_keys <<< $NODE_KEYS &&
            node_key=${node_keys[$id]};
            if [ ! -z $node_key ]; then
              node_key_flag="--node-key ${node_key}";
            fi;
            RUST_LOG=txqueue=debug /starcoin/starcoin -n barnard --discover-local true --disable-miner-client true --min-peers-to-propagate 512 --max-peers-to-propagate 1024 --max-outgoing-peers 512 --max-incoming-peers 512 -d /sc-data $node_key_flag;
        ports:
          - containerPort: 9840
            hostPort: 9840
        volumeMounts:
        - name: starcoin-volume
          mountPath: /sc-data
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_KEYS
            valueFrom:
              secretKeyRef:
                name: node-keys
                key: node-keys
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: doks.digitalocean.com/node-pool
                      operator: In
                      values:
                        - ci-pool
                        - ci-pool2
                topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
  - metadata:
      name: starcoin-volume
      namespace: starcoin-barnard
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
