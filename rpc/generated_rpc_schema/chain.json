{
  "openrpc": "1.2.6",
  "info": {
    "title": "",
    "version": ""
  },
  "methods": [
    {
      "name": "chain.id",
      "params": [],
      "result": {
        "name": "ChainId",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ChainId",
          "type": "object",
          "required": [
            "id",
            "name"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "name": "chain.info",
      "params": [],
      "result": {
        "name": "ChainInfoView",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ChainInfoView",
          "type": "object",
          "required": [
            "block_info",
            "chain_id",
            "genesis_hash",
            "head"
          ],
          "properties": {
            "block_info": {
              "type": "object",
              "required": [
                "block_accumulator_info",
                "block_hash",
                "total_difficulty",
                "txn_accumulator_info"
              ],
              "properties": {
                "block_accumulator_info": {
                  "description": "The block accumulator info.",
                  "type": "object",
                  "required": [
                    "accumulator_root",
                    "frozen_subtree_roots",
                    "num_leaves",
                    "num_nodes"
                  ],
                  "properties": {
                    "accumulator_root": {
                      "description": "Accumulator root hash",
                      "type": "string",
                      "format": "HashValue"
                    },
                    "frozen_subtree_roots": {
                      "description": "Frozen subtree roots of this accumulator.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "HashValue"
                      }
                    },
                    "num_leaves": {
                      "description": "The total number of leaves in this accumulator.",
                      "type": "string"
                    },
                    "num_nodes": {
                      "description": "The total number of nodes in this accumulator.",
                      "type": "string"
                    }
                  }
                },
                "block_hash": {
                  "description": "Block hash",
                  "type": "string",
                  "format": "HashValue"
                },
                "total_difficulty": {
                  "description": "The total difficulty.",
                  "type": "string"
                },
                "txn_accumulator_info": {
                  "description": "The transaction accumulator info",
                  "type": "object",
                  "required": [
                    "accumulator_root",
                    "frozen_subtree_roots",
                    "num_leaves",
                    "num_nodes"
                  ],
                  "properties": {
                    "accumulator_root": {
                      "description": "Accumulator root hash",
                      "type": "string",
                      "format": "HashValue"
                    },
                    "frozen_subtree_roots": {
                      "description": "Frozen subtree roots of this accumulator.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "HashValue"
                      }
                    },
                    "num_leaves": {
                      "description": "The total number of leaves in this accumulator.",
                      "type": "string"
                    },
                    "num_nodes": {
                      "description": "The total number of nodes in this accumulator.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "chain_id": {
              "type": "integer",
              "format": "uint8",
              "minimum": 0.0
            },
            "genesis_hash": {
              "type": "string",
              "format": "HashValue"
            },
            "head": {
              "type": "object",
              "required": [
                "author",
                "block_accumulator_root",
                "block_hash",
                "body_hash",
                "chain_id",
                "difficulty",
                "extra",
                "gas_used",
                "nonce",
                "number",
                "parent_hash",
                "state_root",
                "timestamp",
                "txn_accumulator_root"
              ],
              "properties": {
                "author": {
                  "description": "Block author.",
                  "type": "string",
                  "format": "AccountAddress"
                },
                "author_auth_key": {
                  "description": "Block author auth key.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "block_accumulator_root": {
                  "description": "The block accumulator root hash.",
                  "type": "string",
                  "format": "HashValue"
                },
                "block_hash": {
                  "type": "string",
                  "format": "HashValue"
                },
                "body_hash": {
                  "description": "hash for block body",
                  "type": "string",
                  "format": "HashValue"
                },
                "chain_id": {
                  "description": "The chain id",
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "difficulty": {
                  "description": "Block difficulty",
                  "type": "string"
                },
                "extra": {
                  "description": "block header extra",
                  "type": "string"
                },
                "gas_used": {
                  "description": "Gas used for contracts execution.",
                  "type": "string"
                },
                "nonce": {
                  "description": "Consensus nonce field.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "number": {
                  "description": "Block number.",
                  "type": "string"
                },
                "parent_hash": {
                  "description": "Parent hash.",
                  "type": "string",
                  "format": "HashValue"
                },
                "state_root": {
                  "description": "The last transaction state_root of this block after execute.",
                  "type": "string",
                  "format": "HashValue"
                },
                "timestamp": {
                  "description": "Block timestamp.",
                  "type": "string"
                },
                "txn_accumulator_root": {
                  "description": "The transaction accumulator root hash after executing this block.",
                  "type": "string",
                  "format": "HashValue"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_block_by_hash",
      "params": [
        {
          "name": "block_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_GetBlockOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "decode": {
                "default": false,
                "type": "boolean"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Option < BlockView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_BlockView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "body",
            "header",
            "uncles"
          ],
          "properties": {
            "body": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "Hashes"
                  ],
                  "properties": {
                    "Hashes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "HashValue"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Full"
                  ],
                  "properties": {
                    "Full": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "authenticator",
                          "raw_txn",
                          "transaction_hash"
                        ],
                        "properties": {
                          "authenticator": {
                            "description": "Public key and signature to authenticate",
                            "anyOf": [
                              {
                                "description": "Single signature",
                                "type": "object",
                                "required": [
                                  "Ed25519"
                                ],
                                "properties": {
                                  "Ed25519": {
                                    "type": "object",
                                    "required": [
                                      "public_key",
                                      "signature"
                                    ],
                                    "properties": {
                                      "public_key": {
                                        "type": "string"
                                      },
                                      "signature": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "description": "K-of-N multisignature",
                                "type": "object",
                                "required": [
                                  "MultiEd25519"
                                ],
                                "properties": {
                                  "MultiEd25519": {
                                    "type": "object",
                                    "required": [
                                      "public_key",
                                      "signature"
                                    ],
                                    "properties": {
                                      "public_key": {
                                        "type": "string"
                                      },
                                      "signature": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            ]
                          },
                          "raw_txn": {
                            "description": "The raw transaction",
                            "type": "object",
                            "required": [
                              "chain_id",
                              "expiration_timestamp_secs",
                              "gas_token_code",
                              "gas_unit_price",
                              "max_gas_amount",
                              "payload",
                              "sender",
                              "sequence_number"
                            ],
                            "properties": {
                              "chain_id": {
                                "type": "integer",
                                "format": "uint8",
                                "minimum": 0.0
                              },
                              "decoded_payload": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "description": "A transaction that executes code.",
                                        "type": "object",
                                        "required": [
                                          "Script"
                                        ],
                                        "properties": {
                                          "Script": {
                                            "type": "object",
                                            "required": [
                                              "args",
                                              "code",
                                              "ty_args"
                                            ],
                                            "properties": {
                                              "args": {
                                                "type": "array",
                                                "items": true
                                              },
                                              "code": {
                                                "type": "string"
                                              },
                                              "ty_args": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "A transaction that publish or update module code by a package.",
                                        "type": "object",
                                        "required": [
                                          "Package"
                                        ],
                                        "properties": {
                                          "Package": {
                                            "type": "object",
                                            "required": [
                                              "modules",
                                              "package_address"
                                            ],
                                            "properties": {
                                              "init_script": {
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "required": [
                                                  "args",
                                                  "function",
                                                  "module",
                                                  "ty_args"
                                                ],
                                                "properties": {
                                                  "args": {
                                                    "type": "array",
                                                    "items": true
                                                  },
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "ty_args": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "modules": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "package_address": {
                                                "type": "string",
                                                "format": "AccountAddress"
                                              }
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "A transaction that executes an existing script function published on-chain.",
                                        "type": "object",
                                        "required": [
                                          "ScriptFunction"
                                        ],
                                        "properties": {
                                          "ScriptFunction": {
                                            "type": "object",
                                            "required": [
                                              "args",
                                              "function",
                                              "module",
                                              "ty_args"
                                            ],
                                            "properties": {
                                              "args": {
                                                "type": "array",
                                                "items": true
                                              },
                                              "function": {
                                                "type": "string"
                                              },
                                              "module": {
                                                "type": "string"
                                              },
                                              "ty_args": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "expiration_timestamp_secs": {
                                "type": "string"
                              },
                              "gas_token_code": {
                                "type": "string"
                              },
                              "gas_unit_price": {
                                "type": "string"
                              },
                              "max_gas_amount": {
                                "type": "string"
                              },
                              "payload": {
                                "type": "string"
                              },
                              "sender": {
                                "description": "Sender's address.",
                                "type": "string",
                                "format": "AccountAddress"
                              },
                              "sequence_number": {
                                "type": "string"
                              }
                            }
                          },
                          "transaction_hash": {
                            "type": "string",
                            "format": "HashValue"
                          }
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "header": {
              "type": "object",
              "required": [
                "author",
                "block_accumulator_root",
                "block_hash",
                "body_hash",
                "chain_id",
                "difficulty",
                "extra",
                "gas_used",
                "nonce",
                "number",
                "parent_hash",
                "state_root",
                "timestamp",
                "txn_accumulator_root"
              ],
              "properties": {
                "author": {
                  "description": "Block author.",
                  "type": "string",
                  "format": "AccountAddress"
                },
                "author_auth_key": {
                  "description": "Block author auth key.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "block_accumulator_root": {
                  "description": "The block accumulator root hash.",
                  "type": "string",
                  "format": "HashValue"
                },
                "block_hash": {
                  "type": "string",
                  "format": "HashValue"
                },
                "body_hash": {
                  "description": "hash for block body",
                  "type": "string",
                  "format": "HashValue"
                },
                "chain_id": {
                  "description": "The chain id",
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "difficulty": {
                  "description": "Block difficulty",
                  "type": "string"
                },
                "extra": {
                  "description": "block header extra",
                  "type": "string"
                },
                "gas_used": {
                  "description": "Gas used for contracts execution.",
                  "type": "string"
                },
                "nonce": {
                  "description": "Consensus nonce field.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "number": {
                  "description": "Block number.",
                  "type": "string"
                },
                "parent_hash": {
                  "description": "Parent hash.",
                  "type": "string",
                  "format": "HashValue"
                },
                "state_root": {
                  "description": "The last transaction state_root of this block after execute.",
                  "type": "string",
                  "format": "HashValue"
                },
                "timestamp": {
                  "description": "Block timestamp.",
                  "type": "string"
                },
                "txn_accumulator_root": {
                  "description": "The transaction accumulator root hash after executing this block.",
                  "type": "string",
                  "format": "HashValue"
                }
              }
            },
            "uncles": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "author",
                  "block_accumulator_root",
                  "block_hash",
                  "body_hash",
                  "chain_id",
                  "difficulty",
                  "extra",
                  "gas_used",
                  "nonce",
                  "number",
                  "parent_hash",
                  "state_root",
                  "timestamp",
                  "txn_accumulator_root"
                ],
                "properties": {
                  "author": {
                    "description": "Block author.",
                    "type": "string",
                    "format": "AccountAddress"
                  },
                  "author_auth_key": {
                    "description": "Block author auth key.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "block_accumulator_root": {
                    "description": "The block accumulator root hash.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "block_hash": {
                    "type": "string",
                    "format": "HashValue"
                  },
                  "body_hash": {
                    "description": "hash for block body",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "chain_id": {
                    "description": "The chain id",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "difficulty": {
                    "description": "Block difficulty",
                    "type": "string"
                  },
                  "extra": {
                    "description": "block header extra",
                    "type": "string"
                  },
                  "gas_used": {
                    "description": "Gas used for contracts execution.",
                    "type": "string"
                  },
                  "nonce": {
                    "description": "Consensus nonce field.",
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0.0
                  },
                  "number": {
                    "description": "Block number.",
                    "type": "string"
                  },
                  "parent_hash": {
                    "description": "Parent hash.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "state_root": {
                    "description": "The last transaction state_root of this block after execute.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "timestamp": {
                    "description": "Block timestamp.",
                    "type": "string"
                  },
                  "txn_accumulator_root": {
                    "description": "The transaction accumulator root hash after executing this block.",
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_block_by_number",
      "params": [
        {
          "name": "number",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "uint64",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_GetBlockOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "decode": {
                "default": false,
                "type": "boolean"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Option < BlockView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_BlockView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "body",
            "header",
            "uncles"
          ],
          "properties": {
            "body": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "Hashes"
                  ],
                  "properties": {
                    "Hashes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "HashValue"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Full"
                  ],
                  "properties": {
                    "Full": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "authenticator",
                          "raw_txn",
                          "transaction_hash"
                        ],
                        "properties": {
                          "authenticator": {
                            "description": "Public key and signature to authenticate",
                            "anyOf": [
                              {
                                "description": "Single signature",
                                "type": "object",
                                "required": [
                                  "Ed25519"
                                ],
                                "properties": {
                                  "Ed25519": {
                                    "type": "object",
                                    "required": [
                                      "public_key",
                                      "signature"
                                    ],
                                    "properties": {
                                      "public_key": {
                                        "type": "string"
                                      },
                                      "signature": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              {
                                "description": "K-of-N multisignature",
                                "type": "object",
                                "required": [
                                  "MultiEd25519"
                                ],
                                "properties": {
                                  "MultiEd25519": {
                                    "type": "object",
                                    "required": [
                                      "public_key",
                                      "signature"
                                    ],
                                    "properties": {
                                      "public_key": {
                                        "type": "string"
                                      },
                                      "signature": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            ]
                          },
                          "raw_txn": {
                            "description": "The raw transaction",
                            "type": "object",
                            "required": [
                              "chain_id",
                              "expiration_timestamp_secs",
                              "gas_token_code",
                              "gas_unit_price",
                              "max_gas_amount",
                              "payload",
                              "sender",
                              "sequence_number"
                            ],
                            "properties": {
                              "chain_id": {
                                "type": "integer",
                                "format": "uint8",
                                "minimum": 0.0
                              },
                              "decoded_payload": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "description": "A transaction that executes code.",
                                        "type": "object",
                                        "required": [
                                          "Script"
                                        ],
                                        "properties": {
                                          "Script": {
                                            "type": "object",
                                            "required": [
                                              "args",
                                              "code",
                                              "ty_args"
                                            ],
                                            "properties": {
                                              "args": {
                                                "type": "array",
                                                "items": true
                                              },
                                              "code": {
                                                "type": "string"
                                              },
                                              "ty_args": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "A transaction that publish or update module code by a package.",
                                        "type": "object",
                                        "required": [
                                          "Package"
                                        ],
                                        "properties": {
                                          "Package": {
                                            "type": "object",
                                            "required": [
                                              "modules",
                                              "package_address"
                                            ],
                                            "properties": {
                                              "init_script": {
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "required": [
                                                  "args",
                                                  "function",
                                                  "module",
                                                  "ty_args"
                                                ],
                                                "properties": {
                                                  "args": {
                                                    "type": "array",
                                                    "items": true
                                                  },
                                                  "function": {
                                                    "type": "string"
                                                  },
                                                  "module": {
                                                    "type": "string"
                                                  },
                                                  "ty_args": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "modules": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "package_address": {
                                                "type": "string",
                                                "format": "AccountAddress"
                                              }
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      {
                                        "description": "A transaction that executes an existing script function published on-chain.",
                                        "type": "object",
                                        "required": [
                                          "ScriptFunction"
                                        ],
                                        "properties": {
                                          "ScriptFunction": {
                                            "type": "object",
                                            "required": [
                                              "args",
                                              "function",
                                              "module",
                                              "ty_args"
                                            ],
                                            "properties": {
                                              "args": {
                                                "type": "array",
                                                "items": true
                                              },
                                              "function": {
                                                "type": "string"
                                              },
                                              "module": {
                                                "type": "string"
                                              },
                                              "ty_args": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "expiration_timestamp_secs": {
                                "type": "string"
                              },
                              "gas_token_code": {
                                "type": "string"
                              },
                              "gas_unit_price": {
                                "type": "string"
                              },
                              "max_gas_amount": {
                                "type": "string"
                              },
                              "payload": {
                                "type": "string"
                              },
                              "sender": {
                                "description": "Sender's address.",
                                "type": "string",
                                "format": "AccountAddress"
                              },
                              "sequence_number": {
                                "type": "string"
                              }
                            }
                          },
                          "transaction_hash": {
                            "type": "string",
                            "format": "HashValue"
                          }
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "header": {
              "type": "object",
              "required": [
                "author",
                "block_accumulator_root",
                "block_hash",
                "body_hash",
                "chain_id",
                "difficulty",
                "extra",
                "gas_used",
                "nonce",
                "number",
                "parent_hash",
                "state_root",
                "timestamp",
                "txn_accumulator_root"
              ],
              "properties": {
                "author": {
                  "description": "Block author.",
                  "type": "string",
                  "format": "AccountAddress"
                },
                "author_auth_key": {
                  "description": "Block author auth key.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "block_accumulator_root": {
                  "description": "The block accumulator root hash.",
                  "type": "string",
                  "format": "HashValue"
                },
                "block_hash": {
                  "type": "string",
                  "format": "HashValue"
                },
                "body_hash": {
                  "description": "hash for block body",
                  "type": "string",
                  "format": "HashValue"
                },
                "chain_id": {
                  "description": "The chain id",
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "difficulty": {
                  "description": "Block difficulty",
                  "type": "string"
                },
                "extra": {
                  "description": "block header extra",
                  "type": "string"
                },
                "gas_used": {
                  "description": "Gas used for contracts execution.",
                  "type": "string"
                },
                "nonce": {
                  "description": "Consensus nonce field.",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                },
                "number": {
                  "description": "Block number.",
                  "type": "string"
                },
                "parent_hash": {
                  "description": "Parent hash.",
                  "type": "string",
                  "format": "HashValue"
                },
                "state_root": {
                  "description": "The last transaction state_root of this block after execute.",
                  "type": "string",
                  "format": "HashValue"
                },
                "timestamp": {
                  "description": "Block timestamp.",
                  "type": "string"
                },
                "txn_accumulator_root": {
                  "description": "The transaction accumulator root hash after executing this block.",
                  "type": "string",
                  "format": "HashValue"
                }
              }
            },
            "uncles": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "author",
                  "block_accumulator_root",
                  "block_hash",
                  "body_hash",
                  "chain_id",
                  "difficulty",
                  "extra",
                  "gas_used",
                  "nonce",
                  "number",
                  "parent_hash",
                  "state_root",
                  "timestamp",
                  "txn_accumulator_root"
                ],
                "properties": {
                  "author": {
                    "description": "Block author.",
                    "type": "string",
                    "format": "AccountAddress"
                  },
                  "author_auth_key": {
                    "description": "Block author auth key.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "block_accumulator_root": {
                    "description": "The block accumulator root hash.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "block_hash": {
                    "type": "string",
                    "format": "HashValue"
                  },
                  "body_hash": {
                    "description": "hash for block body",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "chain_id": {
                    "description": "The chain id",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "difficulty": {
                    "description": "Block difficulty",
                    "type": "string"
                  },
                  "extra": {
                    "description": "block header extra",
                    "type": "string"
                  },
                  "gas_used": {
                    "description": "Gas used for contracts execution.",
                    "type": "string"
                  },
                  "nonce": {
                    "description": "Consensus nonce field.",
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0.0
                  },
                  "number": {
                    "description": "Block number.",
                    "type": "string"
                  },
                  "parent_hash": {
                    "description": "Parent hash.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "state_root": {
                    "description": "The last transaction state_root of this block after execute.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "timestamp": {
                    "description": "Block timestamp.",
                    "type": "string"
                  },
                  "txn_accumulator_root": {
                    "description": "The transaction accumulator root hash after executing this block.",
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_blocks_by_number",
      "params": [
        {
          "name": "number",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_uint64",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "count",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "uint64",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Vec < BlockView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Array_of_BlockView",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "body",
              "header",
              "uncles"
            ],
            "properties": {
              "body": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "Hashes"
                    ],
                    "properties": {
                      "Hashes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "HashValue"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "Full"
                    ],
                    "properties": {
                      "Full": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "authenticator",
                            "raw_txn",
                            "transaction_hash"
                          ],
                          "properties": {
                            "authenticator": {
                              "description": "Public key and signature to authenticate",
                              "anyOf": [
                                {
                                  "description": "Single signature",
                                  "type": "object",
                                  "required": [
                                    "Ed25519"
                                  ],
                                  "properties": {
                                    "Ed25519": {
                                      "type": "object",
                                      "required": [
                                        "public_key",
                                        "signature"
                                      ],
                                      "properties": {
                                        "public_key": {
                                          "type": "string"
                                        },
                                        "signature": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "description": "K-of-N multisignature",
                                  "type": "object",
                                  "required": [
                                    "MultiEd25519"
                                  ],
                                  "properties": {
                                    "MultiEd25519": {
                                      "type": "object",
                                      "required": [
                                        "public_key",
                                        "signature"
                                      ],
                                      "properties": {
                                        "public_key": {
                                          "type": "string"
                                        },
                                        "signature": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            },
                            "raw_txn": {
                              "description": "The raw transaction",
                              "type": "object",
                              "required": [
                                "chain_id",
                                "expiration_timestamp_secs",
                                "gas_token_code",
                                "gas_unit_price",
                                "max_gas_amount",
                                "payload",
                                "sender",
                                "sequence_number"
                              ],
                              "properties": {
                                "chain_id": {
                                  "type": "integer",
                                  "format": "uint8",
                                  "minimum": 0.0
                                },
                                "decoded_payload": {
                                  "anyOf": [
                                    {
                                      "anyOf": [
                                        {
                                          "description": "A transaction that executes code.",
                                          "type": "object",
                                          "required": [
                                            "Script"
                                          ],
                                          "properties": {
                                            "Script": {
                                              "type": "object",
                                              "required": [
                                                "args",
                                                "code",
                                                "ty_args"
                                              ],
                                              "properties": {
                                                "args": {
                                                  "type": "array",
                                                  "items": true
                                                },
                                                "code": {
                                                  "type": "string"
                                                },
                                                "ty_args": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "description": "A transaction that publish or update module code by a package.",
                                          "type": "object",
                                          "required": [
                                            "Package"
                                          ],
                                          "properties": {
                                            "Package": {
                                              "type": "object",
                                              "required": [
                                                "modules",
                                                "package_address"
                                              ],
                                              "properties": {
                                                "init_script": {
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ],
                                                  "required": [
                                                    "args",
                                                    "function",
                                                    "module",
                                                    "ty_args"
                                                  ],
                                                  "properties": {
                                                    "args": {
                                                      "type": "array",
                                                      "items": true
                                                    },
                                                    "function": {
                                                      "type": "string"
                                                    },
                                                    "module": {
                                                      "type": "string"
                                                    },
                                                    "ty_args": {
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "modules": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "package_address": {
                                                  "type": "string",
                                                  "format": "AccountAddress"
                                                }
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        {
                                          "description": "A transaction that executes an existing script function published on-chain.",
                                          "type": "object",
                                          "required": [
                                            "ScriptFunction"
                                          ],
                                          "properties": {
                                            "ScriptFunction": {
                                              "type": "object",
                                              "required": [
                                                "args",
                                                "function",
                                                "module",
                                                "ty_args"
                                              ],
                                              "properties": {
                                                "args": {
                                                  "type": "array",
                                                  "items": true
                                                },
                                                "function": {
                                                  "type": "string"
                                                },
                                                "module": {
                                                  "type": "string"
                                                },
                                                "ty_args": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "expiration_timestamp_secs": {
                                  "type": "string"
                                },
                                "gas_token_code": {
                                  "type": "string"
                                },
                                "gas_unit_price": {
                                  "type": "string"
                                },
                                "max_gas_amount": {
                                  "type": "string"
                                },
                                "payload": {
                                  "type": "string"
                                },
                                "sender": {
                                  "description": "Sender's address.",
                                  "type": "string",
                                  "format": "AccountAddress"
                                },
                                "sequence_number": {
                                  "type": "string"
                                }
                              }
                            },
                            "transaction_hash": {
                              "type": "string",
                              "format": "HashValue"
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              },
              "header": {
                "type": "object",
                "required": [
                  "author",
                  "block_accumulator_root",
                  "block_hash",
                  "body_hash",
                  "chain_id",
                  "difficulty",
                  "extra",
                  "gas_used",
                  "nonce",
                  "number",
                  "parent_hash",
                  "state_root",
                  "timestamp",
                  "txn_accumulator_root"
                ],
                "properties": {
                  "author": {
                    "description": "Block author.",
                    "type": "string",
                    "format": "AccountAddress"
                  },
                  "author_auth_key": {
                    "description": "Block author auth key.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "block_accumulator_root": {
                    "description": "The block accumulator root hash.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "block_hash": {
                    "type": "string",
                    "format": "HashValue"
                  },
                  "body_hash": {
                    "description": "hash for block body",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "chain_id": {
                    "description": "The chain id",
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "difficulty": {
                    "description": "Block difficulty",
                    "type": "string"
                  },
                  "extra": {
                    "description": "block header extra",
                    "type": "string"
                  },
                  "gas_used": {
                    "description": "Gas used for contracts execution.",
                    "type": "string"
                  },
                  "nonce": {
                    "description": "Consensus nonce field.",
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0.0
                  },
                  "number": {
                    "description": "Block number.",
                    "type": "string"
                  },
                  "parent_hash": {
                    "description": "Parent hash.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "state_root": {
                    "description": "The last transaction state_root of this block after execute.",
                    "type": "string",
                    "format": "HashValue"
                  },
                  "timestamp": {
                    "description": "Block timestamp.",
                    "type": "string"
                  },
                  "txn_accumulator_root": {
                    "description": "The transaction accumulator root hash after executing this block.",
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              },
              "uncles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "author",
                    "block_accumulator_root",
                    "block_hash",
                    "body_hash",
                    "chain_id",
                    "difficulty",
                    "extra",
                    "gas_used",
                    "nonce",
                    "number",
                    "parent_hash",
                    "state_root",
                    "timestamp",
                    "txn_accumulator_root"
                  ],
                  "properties": {
                    "author": {
                      "description": "Block author.",
                      "type": "string",
                      "format": "AccountAddress"
                    },
                    "author_auth_key": {
                      "description": "Block author auth key.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "block_accumulator_root": {
                      "description": "The block accumulator root hash.",
                      "type": "string",
                      "format": "HashValue"
                    },
                    "block_hash": {
                      "type": "string",
                      "format": "HashValue"
                    },
                    "body_hash": {
                      "description": "hash for block body",
                      "type": "string",
                      "format": "HashValue"
                    },
                    "chain_id": {
                      "description": "The chain id",
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0.0
                    },
                    "difficulty": {
                      "description": "Block difficulty",
                      "type": "string"
                    },
                    "extra": {
                      "description": "block header extra",
                      "type": "string"
                    },
                    "gas_used": {
                      "description": "Gas used for contracts execution.",
                      "type": "string"
                    },
                    "nonce": {
                      "description": "Consensus nonce field.",
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0.0
                    },
                    "number": {
                      "description": "Block number.",
                      "type": "string"
                    },
                    "parent_hash": {
                      "description": "Parent hash.",
                      "type": "string",
                      "format": "HashValue"
                    },
                    "state_root": {
                      "description": "The last transaction state_root of this block after execute.",
                      "type": "string",
                      "format": "HashValue"
                    },
                    "timestamp": {
                      "description": "Block timestamp.",
                      "type": "string"
                    },
                    "txn_accumulator_root": {
                      "description": "The transaction accumulator root hash after executing this block.",
                      "type": "string",
                      "format": "HashValue"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_block_info_by_number",
      "params": [
        {
          "name": "number",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "uint64",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Option < BlockInfoView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_BlockInfoView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "block_accumulator_info",
            "block_hash",
            "total_difficulty",
            "txn_accumulator_info"
          ],
          "properties": {
            "block_accumulator_info": {
              "description": "The block accumulator info.",
              "type": "object",
              "required": [
                "accumulator_root",
                "frozen_subtree_roots",
                "num_leaves",
                "num_nodes"
              ],
              "properties": {
                "accumulator_root": {
                  "description": "Accumulator root hash",
                  "type": "string",
                  "format": "HashValue"
                },
                "frozen_subtree_roots": {
                  "description": "Frozen subtree roots of this accumulator.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "HashValue"
                  }
                },
                "num_leaves": {
                  "description": "The total number of leaves in this accumulator.",
                  "type": "string"
                },
                "num_nodes": {
                  "description": "The total number of nodes in this accumulator.",
                  "type": "string"
                }
              }
            },
            "block_hash": {
              "description": "Block hash",
              "type": "string",
              "format": "HashValue"
            },
            "total_difficulty": {
              "description": "The total difficulty.",
              "type": "string"
            },
            "txn_accumulator_info": {
              "description": "The transaction accumulator info",
              "type": "object",
              "required": [
                "accumulator_root",
                "frozen_subtree_roots",
                "num_leaves",
                "num_nodes"
              ],
              "properties": {
                "accumulator_root": {
                  "description": "Accumulator root hash",
                  "type": "string",
                  "format": "HashValue"
                },
                "frozen_subtree_roots": {
                  "description": "Frozen subtree roots of this accumulator.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "HashValue"
                  }
                },
                "num_leaves": {
                  "description": "The total number of leaves in this accumulator.",
                  "type": "string"
                },
                "num_nodes": {
                  "description": "The total number of nodes in this accumulator.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_transaction",
      "params": [
        {
          "name": "transaction_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_GetTransactionOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "decode": {
                "default": false,
                "type": "boolean"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Option < TransactionView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_TransactionView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "block_hash",
            "block_number",
            "transaction_hash",
            "transaction_index"
          ],
          "properties": {
            "block_hash": {
              "type": "string",
              "format": "HashValue"
            },
            "block_metadata": {
              "type": [
                "object",
                "null"
              ],
              "required": [
                "author",
                "chain_id",
                "number",
                "parent_gas_used",
                "parent_hash",
                "timestamp",
                "uncles"
              ],
              "properties": {
                "author": {
                  "type": "string",
                  "format": "AccountAddress"
                },
                "author_auth_key": {
                  "description": "A struct that represents an account authentication key. An account's address is the last 16 bytes of authentication key used to create it",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "chain_id": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "number": {
                  "type": "string"
                },
                "parent_gas_used": {
                  "type": "string"
                },
                "parent_hash": {
                  "description": "Parent block hash.",
                  "type": "string",
                  "format": "HashValue"
                },
                "timestamp": {
                  "type": "string"
                },
                "uncles": {
                  "type": "string"
                }
              }
            },
            "block_number": {
              "type": "string"
            },
            "transaction_hash": {
              "type": "string",
              "format": "HashValue"
            },
            "transaction_index": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "user_transaction": {
              "type": [
                "object",
                "null"
              ],
              "required": [
                "authenticator",
                "raw_txn",
                "transaction_hash"
              ],
              "properties": {
                "authenticator": {
                  "description": "Public key and signature to authenticate",
                  "anyOf": [
                    {
                      "description": "Single signature",
                      "type": "object",
                      "required": [
                        "Ed25519"
                      ],
                      "properties": {
                        "Ed25519": {
                          "type": "object",
                          "required": [
                            "public_key",
                            "signature"
                          ],
                          "properties": {
                            "public_key": {
                              "type": "string"
                            },
                            "signature": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "description": "K-of-N multisignature",
                      "type": "object",
                      "required": [
                        "MultiEd25519"
                      ],
                      "properties": {
                        "MultiEd25519": {
                          "type": "object",
                          "required": [
                            "public_key",
                            "signature"
                          ],
                          "properties": {
                            "public_key": {
                              "type": "string"
                            },
                            "signature": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                "raw_txn": {
                  "description": "The raw transaction",
                  "type": "object",
                  "required": [
                    "chain_id",
                    "expiration_timestamp_secs",
                    "gas_token_code",
                    "gas_unit_price",
                    "max_gas_amount",
                    "payload",
                    "sender",
                    "sequence_number"
                  ],
                  "properties": {
                    "chain_id": {
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0.0
                    },
                    "decoded_payload": {
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "description": "A transaction that executes code.",
                              "type": "object",
                              "required": [
                                "Script"
                              ],
                              "properties": {
                                "Script": {
                                  "type": "object",
                                  "required": [
                                    "args",
                                    "code",
                                    "ty_args"
                                  ],
                                  "properties": {
                                    "args": {
                                      "type": "array",
                                      "items": true
                                    },
                                    "code": {
                                      "type": "string"
                                    },
                                    "ty_args": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "A transaction that publish or update module code by a package.",
                              "type": "object",
                              "required": [
                                "Package"
                              ],
                              "properties": {
                                "Package": {
                                  "type": "object",
                                  "required": [
                                    "modules",
                                    "package_address"
                                  ],
                                  "properties": {
                                    "init_script": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "args",
                                        "function",
                                        "module",
                                        "ty_args"
                                      ],
                                      "properties": {
                                        "args": {
                                          "type": "array",
                                          "items": true
                                        },
                                        "function": {
                                          "type": "string"
                                        },
                                        "module": {
                                          "type": "string"
                                        },
                                        "ty_args": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "modules": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "package_address": {
                                      "type": "string",
                                      "format": "AccountAddress"
                                    }
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "description": "A transaction that executes an existing script function published on-chain.",
                              "type": "object",
                              "required": [
                                "ScriptFunction"
                              ],
                              "properties": {
                                "ScriptFunction": {
                                  "type": "object",
                                  "required": [
                                    "args",
                                    "function",
                                    "module",
                                    "ty_args"
                                  ],
                                  "properties": {
                                    "args": {
                                      "type": "array",
                                      "items": true
                                    },
                                    "function": {
                                      "type": "string"
                                    },
                                    "module": {
                                      "type": "string"
                                    },
                                    "ty_args": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "expiration_timestamp_secs": {
                      "type": "string"
                    },
                    "gas_token_code": {
                      "type": "string"
                    },
                    "gas_unit_price": {
                      "type": "string"
                    },
                    "max_gas_amount": {
                      "type": "string"
                    },
                    "payload": {
                      "type": "string"
                    },
                    "sender": {
                      "description": "Sender's address.",
                      "type": "string",
                      "format": "AccountAddress"
                    },
                    "sequence_number": {
                      "type": "string"
                    }
                  }
                },
                "transaction_hash": {
                  "type": "string",
                  "format": "HashValue"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_transaction_info",
      "params": [
        {
          "name": "transaction_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        }
      ],
      "result": {
        "name": "Option < TransactionInfoView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_TransactionInfoView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "block_hash",
            "block_number",
            "event_root_hash",
            "gas_used",
            "state_root_hash",
            "status",
            "transaction_global_index",
            "transaction_hash",
            "transaction_index"
          ],
          "properties": {
            "block_hash": {
              "type": "string",
              "format": "HashValue"
            },
            "block_number": {
              "type": "string"
            },
            "event_root_hash": {
              "description": "The root hash of Merkle Accumulator storing all events emitted during this transaction.",
              "type": "string",
              "format": "HashValue"
            },
            "gas_used": {
              "description": "The amount of gas used.",
              "type": "string"
            },
            "state_root_hash": {
              "description": "The root hash of Sparse Merkle Tree describing the world state at the end of this transaction.",
              "type": "string",
              "format": "HashValue"
            },
            "status": {
              "description": "The vm status. If it is not `Executed`, this will provide the general error class. Execution failures and Move abort's receive more detailed information. But other errors are generally categorized with no status code or other information",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Executed",
                    "OutOfGas",
                    "MiscellaneousError"
                  ]
                },
                {
                  "type": "object",
                  "required": [
                    "MoveAbort"
                  ],
                  "properties": {
                    "MoveAbort": {
                      "type": "object",
                      "required": [
                        "abort_code",
                        "location"
                      ],
                      "properties": {
                        "abort_code": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "ExecutionFailure"
                  ],
                  "properties": {
                    "ExecutionFailure": {
                      "type": "object",
                      "required": [
                        "code_offset",
                        "function",
                        "location"
                      ],
                      "properties": {
                        "code_offset": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0.0
                        },
                        "function": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0.0
                        },
                        "location": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Discard"
                  ],
                  "properties": {
                    "Discard": {
                      "type": "object",
                      "required": [
                        "status_code",
                        "status_code_name"
                      ],
                      "properties": {
                        "status_code": {
                          "type": "string"
                        },
                        "status_code_name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "transaction_global_index": {
              "description": "The index of this transaction in chain",
              "type": "string"
            },
            "transaction_hash": {
              "description": "The hash of this transaction.",
              "type": "string",
              "format": "HashValue"
            },
            "transaction_index": {
              "description": "The index of this transaction in block",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "name": "chain.get_block_txn_infos",
      "params": [
        {
          "name": "block_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        }
      ],
      "result": {
        "name": "Vec < TransactionInfoView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Array_of_TransactionInfoView",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "block_hash",
              "block_number",
              "event_root_hash",
              "gas_used",
              "state_root_hash",
              "status",
              "transaction_global_index",
              "transaction_hash",
              "transaction_index"
            ],
            "properties": {
              "block_hash": {
                "type": "string",
                "format": "HashValue"
              },
              "block_number": {
                "type": "string"
              },
              "event_root_hash": {
                "description": "The root hash of Merkle Accumulator storing all events emitted during this transaction.",
                "type": "string",
                "format": "HashValue"
              },
              "gas_used": {
                "description": "The amount of gas used.",
                "type": "string"
              },
              "state_root_hash": {
                "description": "The root hash of Sparse Merkle Tree describing the world state at the end of this transaction.",
                "type": "string",
                "format": "HashValue"
              },
              "status": {
                "description": "The vm status. If it is not `Executed`, this will provide the general error class. Execution failures and Move abort's receive more detailed information. But other errors are generally categorized with no status code or other information",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "Executed",
                      "OutOfGas",
                      "MiscellaneousError"
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "MoveAbort"
                    ],
                    "properties": {
                      "MoveAbort": {
                        "type": "object",
                        "required": [
                          "abort_code",
                          "location"
                        ],
                        "properties": {
                          "abort_code": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "ExecutionFailure"
                    ],
                    "properties": {
                      "ExecutionFailure": {
                        "type": "object",
                        "required": [
                          "code_offset",
                          "function",
                          "location"
                        ],
                        "properties": {
                          "code_offset": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0.0
                          },
                          "function": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0.0
                          },
                          "location": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "Discard"
                    ],
                    "properties": {
                      "Discard": {
                        "type": "object",
                        "required": [
                          "status_code",
                          "status_code_name"
                        ],
                        "properties": {
                          "status_code": {
                            "type": "string"
                          },
                          "status_code_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              },
              "transaction_global_index": {
                "description": "The index of this transaction in chain",
                "type": "string"
              },
              "transaction_hash": {
                "description": "The hash of this transaction.",
                "type": "string",
                "format": "HashValue"
              },
              "transaction_index": {
                "description": "The index of this transaction in block",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_txn_info_by_block_and_index",
      "params": [
        {
          "name": "block_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        },
        {
          "name": "idx",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "uint64",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Option < TransactionInfoView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_TransactionInfoView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "block_hash",
            "block_number",
            "event_root_hash",
            "gas_used",
            "state_root_hash",
            "status",
            "transaction_global_index",
            "transaction_hash",
            "transaction_index"
          ],
          "properties": {
            "block_hash": {
              "type": "string",
              "format": "HashValue"
            },
            "block_number": {
              "type": "string"
            },
            "event_root_hash": {
              "description": "The root hash of Merkle Accumulator storing all events emitted during this transaction.",
              "type": "string",
              "format": "HashValue"
            },
            "gas_used": {
              "description": "The amount of gas used.",
              "type": "string"
            },
            "state_root_hash": {
              "description": "The root hash of Sparse Merkle Tree describing the world state at the end of this transaction.",
              "type": "string",
              "format": "HashValue"
            },
            "status": {
              "description": "The vm status. If it is not `Executed`, this will provide the general error class. Execution failures and Move abort's receive more detailed information. But other errors are generally categorized with no status code or other information",
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Executed",
                    "OutOfGas",
                    "MiscellaneousError"
                  ]
                },
                {
                  "type": "object",
                  "required": [
                    "MoveAbort"
                  ],
                  "properties": {
                    "MoveAbort": {
                      "type": "object",
                      "required": [
                        "abort_code",
                        "location"
                      ],
                      "properties": {
                        "abort_code": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "ExecutionFailure"
                  ],
                  "properties": {
                    "ExecutionFailure": {
                      "type": "object",
                      "required": [
                        "code_offset",
                        "function",
                        "location"
                      ],
                      "properties": {
                        "code_offset": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0.0
                        },
                        "function": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0.0
                        },
                        "location": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Discard"
                  ],
                  "properties": {
                    "Discard": {
                      "type": "object",
                      "required": [
                        "status_code",
                        "status_code_name"
                      ],
                      "properties": {
                        "status_code": {
                          "type": "string"
                        },
                        "status_code_name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "transaction_global_index": {
              "description": "The index of this transaction in chain",
              "type": "string"
            },
            "transaction_hash": {
              "description": "The hash of this transaction.",
              "type": "string",
              "format": "HashValue"
            },
            "transaction_index": {
              "description": "The index of this transaction in block",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "name": "chain.get_events_by_txn_hash",
      "params": [
        {
          "name": "txn_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_GetEventOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "decode": {
                "default": false,
                "type": "boolean"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Vec < TransactionEventResponse >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Array_of_TransactionEventResponse",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "data",
              "event_key",
              "event_seq_number",
              "type_tag"
            ],
            "properties": {
              "block_hash": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              },
              "block_number": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "data": {
                "type": "string"
              },
              "decode_event_data": true,
              "event_index": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "event_key": {
                "description": "A struct that represents a globally unique id for an Event stream that a user can listen to. By design, the lower part of EventKey is the same as account address.",
                "type": "string"
              },
              "event_seq_number": {
                "type": "string"
              },
              "transaction_global_index": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "transaction_hash": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              },
              "transaction_index": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "type_tag": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_events",
      "params": [
        {
          "name": "filter",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "EventFilter",
            "description": "Filter",
            "type": "object",
            "properties": {
              "addrs": {
                "description": "Account addresses which event comes from. match if event belongs to any og the addresses. if `addrs` is empty, event always match.",
                "default": null,
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string",
                  "format": "AccountAddress"
                }
              },
              "event_keys": {
                "description": "Event keys /// if `event_keys` is empty, event always match.",
                "default": null,
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "A struct that represents a globally unique id for an Event stream that a user can listen to. By design, the lower part of EventKey is the same as account address.",
                  "type": "string"
                }
              },
              "from_block": {
                "description": "From Block",
                "default": null,
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "limit": {
                "description": "Limit: from latest to oldest",
                "default": null,
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint",
                "minimum": 0.0
              },
              "to_block": {
                "description": "To Block",
                "default": null,
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "type_tags": {
                "description": "type tags of the event. match if the event is any type of the type tags. /// if `type_tags` is empty, event always match.",
                "default": null,
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_GetEventOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "decode": {
                "default": false,
                "type": "boolean"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Vec < TransactionEventResponse >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Array_of_TransactionEventResponse",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "data",
              "event_key",
              "event_seq_number",
              "type_tag"
            ],
            "properties": {
              "block_hash": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              },
              "block_number": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "data": {
                "type": "string"
              },
              "decode_event_data": true,
              "event_index": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "event_key": {
                "description": "A struct that represents a globally unique id for an Event stream that a user can listen to. By design, the lower part of EventKey is the same as account address.",
                "type": "string"
              },
              "event_seq_number": {
                "type": "string"
              },
              "transaction_global_index": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "transaction_hash": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              },
              "transaction_index": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "type_tag": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_headers",
      "params": [
        {
          "name": "ids",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Array_of_HashValue",
            "type": "array",
            "items": {
              "type": "string",
              "format": "HashValue"
            }
          }
        }
      ],
      "result": {
        "name": "Vec < BlockHeaderView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Array_of_BlockHeaderView",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "author",
              "block_accumulator_root",
              "block_hash",
              "body_hash",
              "chain_id",
              "difficulty",
              "extra",
              "gas_used",
              "nonce",
              "number",
              "parent_hash",
              "state_root",
              "timestamp",
              "txn_accumulator_root"
            ],
            "properties": {
              "author": {
                "description": "Block author.",
                "type": "string",
                "format": "AccountAddress"
              },
              "author_auth_key": {
                "description": "Block author auth key.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "block_accumulator_root": {
                "description": "The block accumulator root hash.",
                "type": "string",
                "format": "HashValue"
              },
              "block_hash": {
                "type": "string",
                "format": "HashValue"
              },
              "body_hash": {
                "description": "hash for block body",
                "type": "string",
                "format": "HashValue"
              },
              "chain_id": {
                "description": "The chain id",
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              },
              "difficulty": {
                "description": "Block difficulty",
                "type": "string"
              },
              "extra": {
                "description": "block header extra",
                "type": "string"
              },
              "gas_used": {
                "description": "Gas used for contracts execution.",
                "type": "string"
              },
              "nonce": {
                "description": "Consensus nonce field.",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "number": {
                "description": "Block number.",
                "type": "string"
              },
              "parent_hash": {
                "description": "Parent hash.",
                "type": "string",
                "format": "HashValue"
              },
              "state_root": {
                "description": "The last transaction state_root of this block after execute.",
                "type": "string",
                "format": "HashValue"
              },
              "timestamp": {
                "description": "Block timestamp.",
                "type": "string"
              },
              "txn_accumulator_root": {
                "description": "The transaction accumulator root hash after executing this block.",
                "type": "string",
                "format": "HashValue"
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_transaction_infos",
      "params": [
        {
          "name": "start_global_index",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "uint64",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "reverse",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Boolean",
            "type": "boolean"
          }
        },
        {
          "name": "max_size",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "uint64",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      ],
      "result": {
        "name": "Vec < TransactionInfoView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Array_of_TransactionInfoView",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "block_hash",
              "block_number",
              "event_root_hash",
              "gas_used",
              "state_root_hash",
              "status",
              "transaction_global_index",
              "transaction_hash",
              "transaction_index"
            ],
            "properties": {
              "block_hash": {
                "type": "string",
                "format": "HashValue"
              },
              "block_number": {
                "type": "string"
              },
              "event_root_hash": {
                "description": "The root hash of Merkle Accumulator storing all events emitted during this transaction.",
                "type": "string",
                "format": "HashValue"
              },
              "gas_used": {
                "description": "The amount of gas used.",
                "type": "string"
              },
              "state_root_hash": {
                "description": "The root hash of Sparse Merkle Tree describing the world state at the end of this transaction.",
                "type": "string",
                "format": "HashValue"
              },
              "status": {
                "description": "The vm status. If it is not `Executed`, this will provide the general error class. Execution failures and Move abort's receive more detailed information. But other errors are generally categorized with no status code or other information",
                "anyOf": [
                  {
                    "type": "string",
                    "enum": [
                      "Executed",
                      "OutOfGas",
                      "MiscellaneousError"
                    ]
                  },
                  {
                    "type": "object",
                    "required": [
                      "MoveAbort"
                    ],
                    "properties": {
                      "MoveAbort": {
                        "type": "object",
                        "required": [
                          "abort_code",
                          "location"
                        ],
                        "properties": {
                          "abort_code": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "ExecutionFailure"
                    ],
                    "properties": {
                      "ExecutionFailure": {
                        "type": "object",
                        "required": [
                          "code_offset",
                          "function",
                          "location"
                        ],
                        "properties": {
                          "code_offset": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0.0
                          },
                          "function": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0.0
                          },
                          "location": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "Discard"
                    ],
                    "properties": {
                      "Discard": {
                        "type": "object",
                        "required": [
                          "status_code",
                          "status_code_name"
                        ],
                        "properties": {
                          "status_code": {
                            "type": "string"
                          },
                          "status_code_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              },
              "transaction_global_index": {
                "description": "The index of this transaction in chain",
                "type": "string"
              },
              "transaction_hash": {
                "description": "The hash of this transaction.",
                "type": "string",
                "format": "HashValue"
              },
              "transaction_index": {
                "description": "The index of this transaction in block",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              }
            }
          }
        }
      }
    },
    {
      "name": "chain.get_transaction_proof",
      "params": [
        {
          "name": "block_hash",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        },
        {
          "name": "transaction_global_index",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "uint64",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "event_index",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_uint64",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          }
        },
        {
          "name": "access_path",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_starcoin_vm_types::access_path::AccessPath",
            "type": [
              "string",
              "null"
            ]
          }
        }
      ],
      "result": {
        "name": "Option < TransactionInfoWithProofView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_TransactionInfoWithProofView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "proof",
            "transaction_info"
          ],
          "properties": {
            "event_proof": {
              "type": [
                "object",
                "null"
              ],
              "required": [
                "event",
                "proof"
              ],
              "properties": {
                "event": {
                  "description": "event is serialized bytes in bcs format.",
                  "type": "string"
                },
                "proof": {
                  "type": "object",
                  "required": [
                    "siblings"
                  ],
                  "properties": {
                    "siblings": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "HashValue"
                      }
                    }
                  }
                }
              }
            },
            "proof": {
              "type": "object",
              "required": [
                "siblings"
              ],
              "properties": {
                "siblings": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              }
            },
            "state_proof": {
              "type": [
                "object",
                "null"
              ],
              "required": [
                "account_proof",
                "account_state_proof"
              ],
              "properties": {
                "account_proof": {
                  "type": "object",
                  "required": [
                    "siblings"
                  ],
                  "properties": {
                    "leaf": {
                      "description": "This proof can be used to authenticate whether a given leaf exists in the tree or not. - If this is `Some(HashValue, HashValue)` - If the first `HashValue` equals requested key, this is an inclusion proof and the second `HashValue` equals the hash of the corresponding account blob. - Otherwise this is a non-inclusion proof. The first `HashValue` is the only key that exists in the subtree and the second `HashValue` equals the hash of the corresponding account blob. - If this is `None`, this is also a non-inclusion proof which indicates the subtree is empty.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": [
                        {
                          "type": "string",
                          "format": "HashValue"
                        },
                        {
                          "type": "string",
                          "format": "HashValue"
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    },
                    "siblings": {
                      "description": "All siblings in this proof, including the default ones. Siblings are ordered from the bottom level to the root level.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "HashValue"
                      }
                    }
                  }
                },
                "account_state": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "account_state_proof": {
                  "type": "object",
                  "required": [
                    "siblings"
                  ],
                  "properties": {
                    "leaf": {
                      "description": "This proof can be used to authenticate whether a given leaf exists in the tree or not. - If this is `Some(HashValue, HashValue)` - If the first `HashValue` equals requested key, this is an inclusion proof and the second `HashValue` equals the hash of the corresponding account blob. - Otherwise this is a non-inclusion proof. The first `HashValue` is the only key that exists in the subtree and the second `HashValue` equals the hash of the corresponding account blob. - If this is `None`, this is also a non-inclusion proof which indicates the subtree is empty.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": [
                        {
                          "type": "string",
                          "format": "HashValue"
                        },
                        {
                          "type": "string",
                          "format": "HashValue"
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    },
                    "siblings": {
                      "description": "All siblings in this proof, including the default ones. Siblings are ordered from the bottom level to the root level.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "HashValue"
                      }
                    }
                  }
                },
                "state": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "transaction_info": {
              "type": "object",
              "required": [
                "block_hash",
                "block_number",
                "event_root_hash",
                "gas_used",
                "state_root_hash",
                "status",
                "transaction_global_index",
                "transaction_hash",
                "transaction_index"
              ],
              "properties": {
                "block_hash": {
                  "type": "string",
                  "format": "HashValue"
                },
                "block_number": {
                  "type": "string"
                },
                "event_root_hash": {
                  "description": "The root hash of Merkle Accumulator storing all events emitted during this transaction.",
                  "type": "string",
                  "format": "HashValue"
                },
                "gas_used": {
                  "description": "The amount of gas used.",
                  "type": "string"
                },
                "state_root_hash": {
                  "description": "The root hash of Sparse Merkle Tree describing the world state at the end of this transaction.",
                  "type": "string",
                  "format": "HashValue"
                },
                "status": {
                  "description": "The vm status. If it is not `Executed`, this will provide the general error class. Execution failures and Move abort's receive more detailed information. But other errors are generally categorized with no status code or other information",
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "Executed",
                        "OutOfGas",
                        "MiscellaneousError"
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "MoveAbort"
                      ],
                      "properties": {
                        "MoveAbort": {
                          "type": "object",
                          "required": [
                            "abort_code",
                            "location"
                          ],
                          "properties": {
                            "abort_code": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "required": [
                        "ExecutionFailure"
                      ],
                      "properties": {
                        "ExecutionFailure": {
                          "type": "object",
                          "required": [
                            "code_offset",
                            "function",
                            "location"
                          ],
                          "properties": {
                            "code_offset": {
                              "type": "integer",
                              "format": "uint16",
                              "minimum": 0.0
                            },
                            "function": {
                              "type": "integer",
                              "format": "uint16",
                              "minimum": 0.0
                            },
                            "location": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "required": [
                        "Discard"
                      ],
                      "properties": {
                        "Discard": {
                          "type": "object",
                          "required": [
                            "status_code",
                            "status_code_name"
                          ],
                          "properties": {
                            "status_code": {
                              "type": "string"
                            },
                            "status_code_name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  ]
                },
                "transaction_global_index": {
                  "description": "The index of this transaction in chain",
                  "type": "string"
                },
                "transaction_hash": {
                  "description": "The hash of this transaction.",
                  "type": "string",
                  "format": "HashValue"
                },
                "transaction_index": {
                  "description": "The index of this transaction in block",
                  "type": "integer",
                  "format": "uint32",
                  "minimum": 0.0
                }
              }
            }
          }
        }
      }
    }
  ]
}