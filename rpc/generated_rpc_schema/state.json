{
  "openrpc": "1.2.6",
  "info": {
    "title": "",
    "version": ""
  },
  "methods": [
    {
      "name": "state.get",
      "params": [
        {
          "name": "access_path",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccessPath",
            "type": "object",
            "required": [
              "address",
              "path"
            ],
            "properties": {
              "address": {
                "type": "string",
                "format": "AccountAddress"
              },
              "path": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "Code"
                    ],
                    "properties": {
                      "Code": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "Resource"
                    ],
                    "properties": {
                      "Resource": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          }
        }
      ],
      "result": {
        "name": "Option < Vec < u8 > >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_Array_of_uint8",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "integer",
            "format": "uint8",
            "minimum": 0.0
          }
        }
      }
    },
    {
      "name": "state.get_with_proof",
      "params": [
        {
          "name": "access_path",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccessPath",
            "type": "object",
            "required": [
              "address",
              "path"
            ],
            "properties": {
              "address": {
                "type": "string",
                "format": "AccountAddress"
              },
              "path": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "Code"
                    ],
                    "properties": {
                      "Code": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "Resource"
                    ],
                    "properties": {
                      "Resource": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          }
        }
      ],
      "result": {
        "name": "StateWithProofView",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "StateWithProofView",
          "type": "object",
          "required": [
            "account_proof",
            "account_state_proof"
          ],
          "properties": {
            "account_proof": {
              "type": "object",
              "required": [
                "siblings"
              ],
              "properties": {
                "leaf": {
                  "description": "This proof can be used to authenticate whether a given leaf exists in the tree or not. - If this is `Some(HashValue, HashValue)` - If the first `HashValue` equals requested key, this is an inclusion proof and the second `HashValue` equals the hash of the corresponding account blob. - Otherwise this is a non-inclusion proof. The first `HashValue` is the only key that exists in the subtree and the second `HashValue` equals the hash of the corresponding account blob. - If this is `None`, this is also a non-inclusion proof which indicates the subtree is empty.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": [
                    {
                      "type": "string",
                      "format": "HashValue"
                    },
                    {
                      "type": "string",
                      "format": "HashValue"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                },
                "siblings": {
                  "description": "All siblings in this proof, including the default ones. Siblings are ordered from the bottom level to the root level.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              }
            },
            "account_state": {
              "type": [
                "string",
                "null"
              ]
            },
            "account_state_proof": {
              "type": "object",
              "required": [
                "siblings"
              ],
              "properties": {
                "leaf": {
                  "description": "This proof can be used to authenticate whether a given leaf exists in the tree or not. - If this is `Some(HashValue, HashValue)` - If the first `HashValue` equals requested key, this is an inclusion proof and the second `HashValue` equals the hash of the corresponding account blob. - Otherwise this is a non-inclusion proof. The first `HashValue` is the only key that exists in the subtree and the second `HashValue` equals the hash of the corresponding account blob. - If this is `None`, this is also a non-inclusion proof which indicates the subtree is empty.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": [
                    {
                      "type": "string",
                      "format": "HashValue"
                    },
                    {
                      "type": "string",
                      "format": "HashValue"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                },
                "siblings": {
                  "description": "All siblings in this proof, including the default ones. Siblings are ordered from the bottom level to the root level.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              }
            },
            "state": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      }
    },
    {
      "name": "state.get_account_state",
      "params": [
        {
          "name": "address",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccountAddress",
            "type": "string",
            "format": "AccountAddress"
          }
        }
      ],
      "result": {
        "name": "Option < AccountState >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_AccountState",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "storage_roots"
          ],
          "properties": {
            "storage_roots": {
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              }
            }
          }
        }
      }
    },
    {
      "name": "state.get_account_state_set",
      "params": [
        {
          "name": "address",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccountAddress",
            "type": "string",
            "format": "AccountAddress"
          }
        },
        {
          "name": "state_root",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_HashValue",
            "type": [
              "string",
              "null"
            ],
            "format": "HashValue"
          }
        }
      ],
      "result": {
        "name": "Option < AccountStateSetView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_AccountStateSetView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "codes",
            "resources"
          ],
          "properties": {
            "codes": {
              "type": "string"
            },
            "resources": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "required": [
                  "abilities",
                  "type_",
                  "value"
                ],
                "properties": {
                  "abilities": {
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  },
                  "type_": {
                    "type": "string"
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "type": "object",
                              "required": [
                                "U8"
                              ],
                              "properties": {
                                "U8": {
                                  "type": "integer",
                                  "format": "uint8",
                                  "minimum": 0.0
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "U64"
                              ],
                              "properties": {
                                "U64": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "U128"
                              ],
                              "properties": {
                                "U128": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "Bool"
                              ],
                              "properties": {
                                "Bool": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "Address"
                              ],
                              "properties": {
                                "Address": {
                                  "type": "string",
                                  "format": "AccountAddress"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "Vector"
                              ],
                              "properties": {
                                "Vector": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/definitions/AnnotatedMoveValueView"
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "Bytes"
                              ],
                              "properties": {
                                "Bytes": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "Struct"
                              ],
                              "properties": {
                                "Struct": {
                                  "$ref": "#/definitions/AnnotatedMoveStructView"
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            }
          },
          "definitions": {
            "AnnotatedMoveStructView": {
              "type": "object",
              "required": [
                "abilities",
                "type_",
                "value"
              ],
              "properties": {
                "abilities": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                },
                "type_": {
                  "type": "string"
                },
                "value": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": [
                      {
                        "type": "string"
                      },
                      {
                        "$ref": "#/definitions/AnnotatedMoveValueView"
                      }
                    ],
                    "maxItems": 2,
                    "minItems": 2
                  }
                }
              }
            },
            "AnnotatedMoveValueView": {
              "anyOf": [
                {
                  "type": "object",
                  "required": [
                    "U8"
                  ],
                  "properties": {
                    "U8": {
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0.0
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "U64"
                  ],
                  "properties": {
                    "U64": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "U128"
                  ],
                  "properties": {
                    "U128": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Bool"
                  ],
                  "properties": {
                    "Bool": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Address"
                  ],
                  "properties": {
                    "Address": {
                      "type": "string",
                      "format": "AccountAddress"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Vector"
                  ],
                  "properties": {
                    "Vector": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/AnnotatedMoveValueView"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Bytes"
                  ],
                  "properties": {
                    "Bytes": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Struct"
                  ],
                  "properties": {
                    "Struct": {
                      "$ref": "#/definitions/AnnotatedMoveStructView"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        }
      }
    },
    {
      "name": "state.get_state_root",
      "params": [],
      "result": {
        "name": "HashValue",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "HashValue",
          "type": "string",
          "format": "HashValue"
        }
      }
    },
    {
      "name": "state.get_with_proof_by_root",
      "params": [
        {
          "name": "access_path",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccessPath",
            "type": "object",
            "required": [
              "address",
              "path"
            ],
            "properties": {
              "address": {
                "type": "string",
                "format": "AccountAddress"
              },
              "path": {
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "Code"
                    ],
                    "properties": {
                      "Code": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "required": [
                      "Resource"
                    ],
                    "properties": {
                      "Resource": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                ]
              }
            }
          }
        },
        {
          "name": "state_root",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "HashValue",
            "type": "string",
            "format": "HashValue"
          }
        }
      ],
      "result": {
        "name": "StateWithProofView",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "StateWithProofView",
          "type": "object",
          "required": [
            "account_proof",
            "account_state_proof"
          ],
          "properties": {
            "account_proof": {
              "type": "object",
              "required": [
                "siblings"
              ],
              "properties": {
                "leaf": {
                  "description": "This proof can be used to authenticate whether a given leaf exists in the tree or not. - If this is `Some(HashValue, HashValue)` - If the first `HashValue` equals requested key, this is an inclusion proof and the second `HashValue` equals the hash of the corresponding account blob. - Otherwise this is a non-inclusion proof. The first `HashValue` is the only key that exists in the subtree and the second `HashValue` equals the hash of the corresponding account blob. - If this is `None`, this is also a non-inclusion proof which indicates the subtree is empty.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": [
                    {
                      "type": "string",
                      "format": "HashValue"
                    },
                    {
                      "type": "string",
                      "format": "HashValue"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                },
                "siblings": {
                  "description": "All siblings in this proof, including the default ones. Siblings are ordered from the bottom level to the root level.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              }
            },
            "account_state": {
              "type": [
                "string",
                "null"
              ]
            },
            "account_state_proof": {
              "type": "object",
              "required": [
                "siblings"
              ],
              "properties": {
                "leaf": {
                  "description": "This proof can be used to authenticate whether a given leaf exists in the tree or not. - If this is `Some(HashValue, HashValue)` - If the first `HashValue` equals requested key, this is an inclusion proof and the second `HashValue` equals the hash of the corresponding account blob. - Otherwise this is a non-inclusion proof. The first `HashValue` is the only key that exists in the subtree and the second `HashValue` equals the hash of the corresponding account blob. - If this is `None`, this is also a non-inclusion proof which indicates the subtree is empty.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": [
                    {
                      "type": "string",
                      "format": "HashValue"
                    },
                    {
                      "type": "string",
                      "format": "HashValue"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                },
                "siblings": {
                  "description": "All siblings in this proof, including the default ones. Siblings are ordered from the bottom level to the root level.",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "HashValue"
                  }
                }
              }
            },
            "state": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        }
      }
    },
    {
      "name": "state.get_code",
      "params": [
        {
          "name": "module_id",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "move_core_types::language_storage::ModuleId",
            "type": "string"
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_GetCodeOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "resolve": {
                "default": false,
                "type": "boolean"
              },
              "state_root": {
                "default": null,
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Option < CodeView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_CodeView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "code"
          ],
          "properties": {
            "abi": {
              "type": [
                "object",
                "null"
              ],
              "required": [
                "module_name",
                "script_functions",
                "structs"
              ],
              "properties": {
                "module_name": {
                  "type": "string"
                },
                "script_functions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "args",
                      "doc",
                      "module_name",
                      "name",
                      "returns",
                      "ty_args"
                    ],
                    "properties": {
                      "args": {
                        "description": "The description of regular arguments.",
                        "type": "array",
                        "items": {
                          "description": "The description of a (regular) argument in a script.",
                          "type": "object",
                          "required": [
                            "doc",
                            "name",
                            "type_tag"
                          ],
                          "properties": {
                            "doc": {
                              "description": "The doc of the arg.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the argument.",
                              "type": "string"
                            },
                            "type_tag": {
                              "description": "The expected type. In Move scripts, this does contain generics type parameters.",
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Bool",
                                    "U8",
                                    "U64",
                                    "U128",
                                    "Address",
                                    "Signer"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "Vector"
                                  ],
                                  "properties": {
                                    "Vector": {
                                      "$ref": "#/definitions/TypeInstantiation"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "Struct"
                                  ],
                                  "properties": {
                                    "Struct": {
                                      "type": "object",
                                      "required": [
                                        "abilities",
                                        "doc",
                                        "fields",
                                        "module_name",
                                        "name",
                                        "ty_args"
                                      ],
                                      "properties": {
                                        "abilities": {
                                          "type": "string"
                                        },
                                        "doc": {
                                          "description": "The doc of the struct",
                                          "type": "string"
                                        },
                                        "fields": {
                                          "description": "fields of the structs.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "doc",
                                              "name",
                                              "type_abi"
                                            ],
                                            "properties": {
                                              "doc": {
                                                "description": "doc of the field",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "field name",
                                                "type": "string"
                                              },
                                              "type_abi": {
                                                "description": "type of the field",
                                                "allOf": [
                                                  {
                                                    "$ref": "#/definitions/TypeInstantiation"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "module_name": {
                                          "description": "module contains the struct",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "name of the struct",
                                          "type": "string"
                                        },
                                        "ty_args": {
                                          "type": "array",
                                          "items": {
                                            "description": "The description of a type argument in a script.",
                                            "type": "object",
                                            "required": [
                                              "abilities",
                                              "name",
                                              "phantom",
                                              "ty"
                                            ],
                                            "properties": {
                                              "abilities": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "The name of the argument.",
                                                "type": "string"
                                              },
                                              "phantom": {
                                                "type": "boolean"
                                              },
                                              "ty": {
                                                "$ref": "#/definitions/TypeInstantiation"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "TypeParameter"
                                  ],
                                  "properties": {
                                    "TypeParameter": {
                                      "type": "integer",
                                      "format": "uint",
                                      "minimum": 0.0
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "Reference"
                                  ],
                                  "properties": {
                                    "Reference": {
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/TypeInstantiation"
                                        }
                                      ],
                                      "maxItems": 2,
                                      "minItems": 2
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        }
                      },
                      "doc": {
                        "description": "Some text comment.",
                        "type": "string"
                      },
                      "module_name": {
                        "description": "The module name where the script lives.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The public name of the script.",
                        "type": "string"
                      },
                      "returns": {
                        "description": "return types",
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "Bool",
                                "U8",
                                "U64",
                                "U128",
                                "Address",
                                "Signer"
                              ]
                            },
                            {
                              "type": "object",
                              "required": [
                                "Vector"
                              ],
                              "properties": {
                                "Vector": {
                                  "$ref": "#/definitions/TypeInstantiation"
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "Struct"
                              ],
                              "properties": {
                                "Struct": {
                                  "type": "object",
                                  "required": [
                                    "abilities",
                                    "doc",
                                    "fields",
                                    "module_name",
                                    "name",
                                    "ty_args"
                                  ],
                                  "properties": {
                                    "abilities": {
                                      "type": "string"
                                    },
                                    "doc": {
                                      "description": "The doc of the struct",
                                      "type": "string"
                                    },
                                    "fields": {
                                      "description": "fields of the structs.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "doc",
                                          "name",
                                          "type_abi"
                                        ],
                                        "properties": {
                                          "doc": {
                                            "description": "doc of the field",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "field name",
                                            "type": "string"
                                          },
                                          "type_abi": {
                                            "description": "type of the field",
                                            "allOf": [
                                              {
                                                "$ref": "#/definitions/TypeInstantiation"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "module_name": {
                                      "description": "module contains the struct",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "name of the struct",
                                      "type": "string"
                                    },
                                    "ty_args": {
                                      "type": "array",
                                      "items": {
                                        "description": "The description of a type argument in a script.",
                                        "type": "object",
                                        "required": [
                                          "abilities",
                                          "name",
                                          "phantom",
                                          "ty"
                                        ],
                                        "properties": {
                                          "abilities": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the argument.",
                                            "type": "string"
                                          },
                                          "phantom": {
                                            "type": "boolean"
                                          },
                                          "ty": {
                                            "$ref": "#/definitions/TypeInstantiation"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "TypeParameter"
                              ],
                              "properties": {
                                "TypeParameter": {
                                  "type": "integer",
                                  "format": "uint",
                                  "minimum": 0.0
                                }
                              },
                              "additionalProperties": false
                            },
                            {
                              "type": "object",
                              "required": [
                                "Reference"
                              ],
                              "properties": {
                                "Reference": {
                                  "type": "array",
                                  "items": [
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "$ref": "#/definitions/TypeInstantiation"
                                    }
                                  ],
                                  "maxItems": 2,
                                  "minItems": 2
                                }
                              },
                              "additionalProperties": false
                            }
                          ]
                        }
                      },
                      "ty_args": {
                        "description": "The names of the type arguments.",
                        "type": "array",
                        "items": {
                          "description": "The description of a type argument in a script.",
                          "type": "object",
                          "required": [
                            "abilities",
                            "name",
                            "phantom"
                          ],
                          "properties": {
                            "abilities": {
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the argument.",
                              "type": "string"
                            },
                            "phantom": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "structs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "abilities",
                      "doc",
                      "fields",
                      "module_name",
                      "name",
                      "ty_args"
                    ],
                    "properties": {
                      "abilities": {
                        "type": "string"
                      },
                      "doc": {
                        "description": "The doc of the struct",
                        "type": "string"
                      },
                      "fields": {
                        "description": "fields of the structs.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "doc",
                            "name",
                            "type_abi"
                          ],
                          "properties": {
                            "doc": {
                              "description": "doc of the field",
                              "type": "string"
                            },
                            "name": {
                              "description": "field name",
                              "type": "string"
                            },
                            "type_abi": {
                              "description": "type of the field",
                              "anyOf": [
                                {
                                  "type": "string",
                                  "enum": [
                                    "Bool",
                                    "U8",
                                    "U64",
                                    "U128",
                                    "Address",
                                    "Signer"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "Vector"
                                  ],
                                  "properties": {
                                    "Vector": {
                                      "$ref": "#/definitions/TypeInstantiation"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "Struct"
                                  ],
                                  "properties": {
                                    "Struct": {
                                      "type": "object",
                                      "required": [
                                        "abilities",
                                        "doc",
                                        "fields",
                                        "module_name",
                                        "name",
                                        "ty_args"
                                      ],
                                      "properties": {
                                        "abilities": {
                                          "type": "string"
                                        },
                                        "doc": {
                                          "description": "The doc of the struct",
                                          "type": "string"
                                        },
                                        "fields": {
                                          "description": "fields of the structs.",
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/definitions/FieldABI"
                                          }
                                        },
                                        "module_name": {
                                          "description": "module contains the struct",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "name of the struct",
                                          "type": "string"
                                        },
                                        "ty_args": {
                                          "type": "array",
                                          "items": {
                                            "description": "The description of a type argument in a script.",
                                            "type": "object",
                                            "required": [
                                              "abilities",
                                              "name",
                                              "phantom",
                                              "ty"
                                            ],
                                            "properties": {
                                              "abilities": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "The name of the argument.",
                                                "type": "string"
                                              },
                                              "phantom": {
                                                "type": "boolean"
                                              },
                                              "ty": {
                                                "$ref": "#/definitions/TypeInstantiation"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "TypeParameter"
                                  ],
                                  "properties": {
                                    "TypeParameter": {
                                      "type": "integer",
                                      "format": "uint",
                                      "minimum": 0.0
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "Reference"
                                  ],
                                  "properties": {
                                    "Reference": {
                                      "type": "array",
                                      "items": [
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "$ref": "#/definitions/TypeInstantiation"
                                        }
                                      ],
                                      "maxItems": 2,
                                      "minItems": 2
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              ]
                            }
                          }
                        }
                      },
                      "module_name": {
                        "description": "module contains the struct",
                        "type": "string"
                      },
                      "name": {
                        "description": "name of the struct",
                        "type": "string"
                      },
                      "ty_args": {
                        "type": "array",
                        "items": {
                          "description": "The description of a type argument in a script.",
                          "type": "object",
                          "required": [
                            "abilities",
                            "name",
                            "phantom"
                          ],
                          "properties": {
                            "abilities": {
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the argument.",
                              "type": "string"
                            },
                            "phantom": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "code": {
              "type": "string"
            }
          },
          "definitions": {
            "FieldABI": {
              "type": "object",
              "required": [
                "doc",
                "name",
                "type_abi"
              ],
              "properties": {
                "doc": {
                  "description": "doc of the field",
                  "type": "string"
                },
                "name": {
                  "description": "field name",
                  "type": "string"
                },
                "type_abi": {
                  "description": "type of the field",
                  "allOf": [
                    {
                      "$ref": "#/definitions/TypeInstantiation"
                    }
                  ]
                }
              }
            },
            "TypeInstantiation": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Bool",
                    "U8",
                    "U64",
                    "U128",
                    "Address",
                    "Signer"
                  ]
                },
                {
                  "type": "object",
                  "required": [
                    "Vector"
                  ],
                  "properties": {
                    "Vector": {
                      "$ref": "#/definitions/TypeInstantiation"
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Struct"
                  ],
                  "properties": {
                    "Struct": {
                      "type": "object",
                      "required": [
                        "abilities",
                        "doc",
                        "fields",
                        "module_name",
                        "name",
                        "ty_args"
                      ],
                      "properties": {
                        "abilities": {
                          "type": "string"
                        },
                        "doc": {
                          "description": "The doc of the struct",
                          "type": "string"
                        },
                        "fields": {
                          "description": "fields of the structs.",
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/FieldABI"
                          }
                        },
                        "module_name": {
                          "description": "module contains the struct",
                          "type": "string"
                        },
                        "name": {
                          "description": "name of the struct",
                          "type": "string"
                        },
                        "ty_args": {
                          "type": "array",
                          "items": {
                            "description": "The description of a type argument in a script.",
                            "type": "object",
                            "required": [
                              "abilities",
                              "name",
                              "phantom",
                              "ty"
                            ],
                            "properties": {
                              "abilities": {
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the argument.",
                                "type": "string"
                              },
                              "phantom": {
                                "type": "boolean"
                              },
                              "ty": {
                                "$ref": "#/definitions/TypeInstantiation"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "TypeParameter"
                  ],
                  "properties": {
                    "TypeParameter": {
                      "type": "integer",
                      "format": "uint",
                      "minimum": 0.0
                    }
                  },
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "required": [
                    "Reference"
                  ],
                  "properties": {
                    "Reference": {
                      "type": "array",
                      "items": [
                        {
                          "type": "boolean"
                        },
                        {
                          "$ref": "#/definitions/TypeInstantiation"
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  },
                  "additionalProperties": false
                }
              ]
            }
          }
        }
      }
    },
    {
      "name": "state.get_resource",
      "params": [
        {
          "name": "addr",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccountAddress",
            "type": "string",
            "format": "AccountAddress"
          }
        },
        {
          "name": "resource_type",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "move_core_types::language_storage::StructTag",
            "type": "string"
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_GetResourceOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "decode": {
                "default": false,
                "type": "boolean"
              },
              "state_root": {
                "default": null,
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              }
            }
          }
        }
      ],
      "result": {
        "name": "Option < ResourceView >",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "Nullable_ResourceView",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "raw"
          ],
          "properties": {
            "json": true,
            "raw": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "name": "state.list_resource",
      "params": [
        {
          "name": "addr",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccountAddress",
            "type": "string",
            "format": "AccountAddress"
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_ListResourceOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "decode": {
                "default": false,
                "type": "boolean"
              },
              "state_root": {
                "description": "The state tree root, default is the latest block state root",
                "default": null,
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              }
            }
          }
        }
      ],
      "result": {
        "name": "ListResourceView",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ListResourceView",
          "type": "object",
          "required": [
            "resources"
          ],
          "properties": {
            "resources": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "required": [
                  "raw"
                ],
                "properties": {
                  "json": true,
                  "raw": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "state.list_code",
      "params": [
        {
          "name": "addr",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "AccountAddress",
            "type": "string",
            "format": "AccountAddress"
          }
        },
        {
          "name": "option",
          "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Nullable_ListCodeOption",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "resolve": {
                "default": false,
                "type": "boolean"
              },
              "state_root": {
                "description": "The state tree root, default is the latest block state root",
                "default": null,
                "type": [
                  "string",
                  "null"
                ],
                "format": "HashValue"
              }
            }
          }
        }
      ],
      "result": {
        "name": "ListCodeView",
        "schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "ListCodeView",
          "type": "object",
          "required": [
            "codes"
          ],
          "properties": {
            "codes": {
              "type": "string"
            }
          }
        }
      }
    }
  ]
}