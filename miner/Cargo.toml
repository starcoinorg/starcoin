[dependencies]
anyhow = { workspace = true }
futures = { workspace = true }
futures-timer = { workspace = true }
hex = { workspace = true }
once_cell = { workspace = true }
parking_lot = { workspace = true }
thiserror = { workspace = true }
bcs-ext = { package = "bcs-ext", workspace = true }
starcoin-consensus = { package = "starcoin-consensus", workspace = true }
starcoin-crypto = { package = "starcoin-crypto", workspace = true }
starcoin-logger = { package = "starcoin-logger", workspace = true }
serde = { workspace = true }
starcoin-account-api = { workspace = true }
starcoin-account-service = { workspace = true }
starcoin-accumulator = { package = "starcoin-accumulator", workspace = true }
starcoin-chain = { workspace = true }
starcoin-config = { workspace = true }
starcoin-executor = { workspace = true }
starcoin-metrics = { workspace = true }
starcoin-open-block = { workspace = true }
starcoin-service-registry = { workspace = true }
starcoin-state-api = { workspace = true }
starcoin-storage = { workspace = true }
starcoin-txpool = { workspace = true }
starcoin-txpool-api = { workspace = true }
starcoin-vm-types = { workspace = true }
tokio = { features = ["full"], workspace = true }
starcoin-types = { package = "starcoin-types", workspace = true }
starcoin-dag = { workspace =true }
[dev-dependencies]
starcoin-network-rpc = { package = "starcoin-network-rpc", workspace = true }
starcoin-genesis = { workspace = true }
starcoin-network-rpc-api = { workspace = true }
starcoin-node = { workspace = true }
starcoin-state-service = { workspace = true }
starcoin-sync-api = { package = "starcoin-sync-api", workspace = true }
starcoin-time-service = { workspace = true }
stest = { workspace = true }
starcoin-sync = { package = "starcoin-sync", workspace = true }
test-helper = { workspace = true }

[package]
authors = { workspace = true }
edition = { workspace = true }
name = "starcoin-miner"
version = "1.13.8"
homepage = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
repository = { workspace = true }
rust-version = { workspace = true }
