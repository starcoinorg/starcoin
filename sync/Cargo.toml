[package]
name = "starcoin-sync"
version = "0.3.1"
authors = ["Starcoin Core Dev <dev@starcoin.org>"]
edition = "2018"

[dependencies]
chain = {path = "../chain", package="starcoin-chain" }
anyhow = "1.0"
actix = "0.10.0-alpha.3"
rand = "0.7.3"
config = {path = "../config", package="starcoin-config"}
network = {path = "../network", package="starcoin-network"}
types = {path = "../types", package = "starcoin-types" }
crypto = { package="starcoin-crypto", path = "../commons/crypto"}
itertools = { version = "0.9.0", default-features = false }
traits = {path = "../core/traits", package="starcoin-traits"}
futures = "0.3"
bus = { path = "../bus", package = "starcoin-bus"}
txpool = {path = "../txpool", package="starcoin-txpool"}
starcoin-txpool-api = {path="../txpool/api"}
futures-timer = "3.0"
starcoin-genesis = {path = "../core/genesis"}
starcoin-storage = {path = "../storage"}
logger = {path = "../commons/logger",package="starcoin-logger"}
consensus = {path = "../consensus", package="starcoin-consensus" }
executor = {path = "../executor", package="starcoin-executor" }
starcoin-state-tree = { package="starcoin-state-tree", path = "../state/state-tree"}
parking_lot = "0.11"
forkable-jellyfish-merkle = { path = "../core/forkable-jellyfish-merkle"}
network-api = {package="network-api", path="../network/api"}
starcoin-sync-api = {package="starcoin-sync-api", path="../sync/api"}
async-trait = "0.1"
starcoin-canonical-serialization = { package="starcoin-canonical-serialization", path = "../commons/scs"}
starcoin-accumulator = {package="starcoin-accumulator", path = "../core/accumulator"}
starcoin-metrics = {path = "../commons/metrics"}
once_cell = "1.4.0"
dyn-clone = "1.0.1"
network-rpc = { path = "../network-rpc", package = "starcoin-network-rpc" }
[dev-dependencies]
tokio = { version = "0.2", features = ["full"] }
actix-rt = "1.1"
miner = {path = "../miner", package="starcoin-miner" }
hex = "0.4.2"
starcoin-wallet-api = { path = "../wallet/api"}
libp2p = "0.22.0"
stest = { path = "../commons/stest"}
starcoin-block-relayer = { path = "../block-relayer"}