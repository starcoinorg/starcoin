============ after processor `stackless` ================

[variant baseline]
pub fun Trafo::incr_ref($t0|r: &mut u64) {
     var $t1: &mut u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: &mut u64
  0: $t1 := copy($t0)
  1: $t2 := read_ref($t1)
  2: $t3 := 1
  3: $t4 := +($t2, $t3)
  4: $t5 := move($t0)
  5: write_ref($t5, $t4)
  6: return ()
}


[variant baseline]
pub fun Trafo::use_incr_ref($t0|b: bool): Trafo::R {
     var $t1|r1: Trafo::R
     var $t2|r2: Trafo::R
     var $t3|r_ref: &mut Trafo::R
     var $t4|tmp#$4: &mut Trafo::R
     var $t5: u64
     var $t6: Trafo::R
     var $t7: u64
     var $t8: Trafo::R
     var $t9: bool
     var $t10: &mut Trafo::R
     var $t11: &mut Trafo::R
     var $t12: &mut Trafo::R
     var $t13: &mut Trafo::R
     var $t14: &mut u64
     var $t15: Trafo::R
  0: $t5 := 1
  1: $t6 := pack Trafo::R($t5)
  2: $t1 := $t6
  3: $t7 := 2
  4: $t8 := pack Trafo::R($t7)
  5: $t2 := $t8
  6: $t9 := copy($t0)
  7: if ($t9) goto 10 else goto 8
  8: label L1
  9: goto 14
 10: label L0
 11: $t10 := borrow_local($t1)
 12: $t4 := $t10
 13: goto 18
 14: label L2
 15: $t11 := borrow_local($t2)
 16: $t4 := $t11
 17: goto 18
 18: label L3
 19: $t12 := move($t4)
 20: $t3 := $t12
 21: $t13 := move($t3)
 22: $t14 := borrow_field<Trafo::R>.x($t13)
 23: Trafo::incr_ref($t14)
 24: $t15 := move($t2)
 25: return $t15
}
